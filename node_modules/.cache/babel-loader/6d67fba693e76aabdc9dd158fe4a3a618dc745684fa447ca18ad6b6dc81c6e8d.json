{"ast":null,"code":"var _jsxFileName = \"D:\\\\web projects files\\\\Current_egate_Quiz_project\\\\src\\\\Pages\\\\Paper\\\\Document_ImageInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Document_ImageInfo() {\n  _s();\n  const [data, setData] = useState(null);\n  const {\n    subjectId,\n    testCreationTableId\n  } = useParams();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:4009/getSubjectData/6/1`);\n        const result = await response.json();\n        setData(result);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []); // The empty dependency array ensures that this effect runs once when the component mounts.\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render your component using the fetched data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [data.document.documen_name, \" \", data.document.subjectId, data.document.testCreationTableId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"q1s\",\n      style: {\n        display: 'flex',\n        gap: '4rem',\n        flexDirection: 'column',\n        width: '85vw',\n        margin: '2rem'\n      },\n      children: data.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outColor\",\n        style: {\n          background: '#e5e5e5',\n          padding: '2rem 2rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png;base64,${question.question_img}`,\n              alt: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 10\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 10\n          }, this), data.options.filter(opt => opt.question_id === question.question_id).map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png;base64,${option.option_img}`,\n              alt: \"Option\"\n            }, option.question_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 14\n          }, this)), data.solutions.filter(sol => sol.question_id === question.question_id).map(solution => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"solution\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png;base64,${solution.solution_img}`,\n              alt: \"Solution\"\n            }, solution.question_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this))]\n        }, question.question_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Document_ImageInfo, \"T8an0QQv2adQMtruKalCJnMheGA=\", false, function () {\n  return [useParams];\n});\n_c = Document_ImageInfo;\nexport default Document_ImageInfo;\nvar _c;\n$RefreshReg$(_c, \"Document_ImageInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Document_ImageInfo","_s","data","setData","subjectId","testCreationTableId","fetchData","response","fetch","result","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","document","documen_name","className","style","display","gap","flexDirection","width","margin","questions","map","question","index","background","padding","src","question_img","alt","options","filter","opt","question_id","option","option_img","solutions","sol","solution","solution_img","_c","$RefreshReg$"],"sources":["D:/web projects files/Current_egate_Quiz_project/src/Pages/Paper/Document_ImageInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n \r\nfunction Document_ImageInfo() {\r\n  const [data, setData] = useState(null);\r\nconst {subjectId, testCreationTableId} = useParams();\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:4009/getSubjectData/6/1`);\r\n        const result = await response.json();\r\n        setData(result);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n \r\n    fetchData();\r\n  }, []); // The empty dependency array ensures that this effect runs once when the component mounts.\r\n \r\n  if (!data) {\r\n    return <div>Loading...</div>;\r\n  }\r\n \r\n  // Render your component using the fetched data\r\n  return (\r\n    <div>\r\n      {/* Access data as needed, for example: */}\r\n      <h1>{data.document.documen_name} {data.document.subjectId}{data.document.testCreationTableId}</h1>\r\n      {/* Map over questions and render them */}\r\n      <div className='q1s' style={{display:'flex',gap:'4rem',flexDirection:'column',width:'85vw',margin:'2rem'}}>\r\n      {data.questions.map((question, index) => (\r\n     \r\n        <div className='outColor' style={{background:'#e5e5e5',padding:'2rem 2rem'}}>\r\n         <div key={question.question_id} >\r\n         <div className='question' key={index}>\r\n          <h3>{index+1}</h3>\r\n         <img src={`data:image/png;base64,${question.question_img}`} alt=\"Question\" />\r\n         </div>\r\n         \r\n          {/* Map over options and render them */}\r\n          {data.options\r\n            .filter((opt) => opt.question_id === question.question_id)\r\n            .map((option) => (\r\n             <div className='option'>\r\n                 <img key={option.question_id} src={`data:image/png;base64,${option.option_img}`} alt=\"Option\" />\r\n             </div>\r\n            ))}\r\n         \r\n          {/* Render solutions similarly */}\r\n          {data.solutions\r\n            .filter((sol) => sol.question_id === question.question_id)\r\n            .map((solution) => (\r\n              <div className='solution'>\r\n                <img key={solution.question_id} src={`data:image/png;base64,${solution.solution_img}`} alt=\"Solution\" />\r\n              </div>\r\n            ))}\r\n        </div>\r\n       </div>\r\n     \r\n      ))}\r\n       </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Document_ImageInfo;\r\n "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}