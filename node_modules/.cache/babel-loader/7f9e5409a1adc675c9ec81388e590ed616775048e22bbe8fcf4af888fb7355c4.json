{"ast":null,"code":"var _jsxFileName = \"D:\\\\web projects files\\\\Current_egate_Quiz_project\\\\src\\\\Pages\\\\Paper\\\\Paper1.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// // import { useParams } from \"react-router-dom\";\n\n// const Paper1 = () => {\n//   // const { subi_id } = useParams();\n//   //     const [quizData, setQuizData] = useState([]);\n\n//   // console.log(quizData)\n//   // useEffect(() => {\n//   //   // Fetch data from the endpoint\n//   //   fetch(`http://localhost:10000/quiz_all/`+subi_id)\n\n//   //     .then((response) => response.json())\n//   //     .then((data) => setQuizData(data))\n//   //     .catch((error) => console.error('Error fetching data:', error));\n//   // }, [subi_id]);\n\n//   const [subjectNames, setSubjectNames] = useState([]);\n\n//   useEffect(() => {\n//     fetch(`http://localhost:4009/quiz_all/1`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log(data); // Log the data received from the API\n//         setSubjectNames(data);\n//       })\n//       .catch((error) => console.error(\"Error fetching data:\", error));\n//   }, []);\n\n//   // const [answer, setAnswer] = useState([]);\n//   // useEffect(() => {\n//   //   // Fetch data from the endpoint\n//   //   fetch(`http://localhost:4009/answers/`)\n//   //     .then((response) => response.json())\n//   //     .then((data) => setAnswer(data))\n//   //     .catch((error) => console.error(\"Error fetching data:\", error));\n//   // }, []);\n\n//   return (\n//     <div>\n//       <h1>hii</h1>\n\n//       <div>\n//         {Array.isArray(subjectNames) && subjectNames.length > 0 ? (\n//           <div>\n//             {subjectNames.map((subjects) => (\n//               <li key={subjects.subi_id}>\n//                 <p>{subjects.subject_name}</p>\n//               </li>\n//             ))}\n//           </div>\n//         ) : (\n//           <p>No subjects available.</p>\n//         )}\n//         {/* <ul>\n//            {subjectNames.map((item) => (\n//           <li key={item.subi_id}>\n//             <p>{item.subject_name}</p>\n//           </li>\n//         ))}\n//         </ul> */}\n\n//         {/* <button>Mathematics</button>\n//                 <button>Physics</button>\n//                 <button>Chemistry</button> */}\n//       </div>\n\n//       {/* answers display */}\n//       {/* <div>\n//       {answer.map((ans) => (\n//           <li key={ans.subi_id}>\n//             <p>{ans.answer}</p>\n//           </li>\n//         ))}\n//       </div> */}\n\n//       {/* <h1>Quiz Questions</h1> */}\n//       <div>\n//         {/* {quizData.map((question) => (\n//           <div key={question.question_id}>\n//             <h3>Question {question.question_id}</h3>\n//             <img\n//               src={`data:image/png;base64,${question.question_img}`}\n//               alt={`Question ${question.question_id}`}\n//             />\n//             <ul>\n//               {question.options.map((option) => (\n//                 <li key={option.option_id}>\n//                   <img\n//                     src={`data:image/png;base64,${option.option_img}`}\n//                     alt={`Option ${option.option_id}`}\n//                   />\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         ))} */}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Paper1;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport PaperHeader from \"../../Components/PaperHeader/PaperHeader\";\nimport \"./Paper.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Paper1 = () => {\n  _s();\n  const [questionData, setQuestionData] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [Subjects, setSubjects] = useState([]);\n  const {\n    testCreationTableId,\n    subjectId\n  } = useParams();\n  const [sections, setSections] = useState([]);\n  useEffect(() => {\n    const fetchSubjects = async () => {\n      try {\n        const response = await fetch(`http://localhost:4009/subjects/${testCreationTableId}`);\n        const data = await response.json();\n        setSubjects(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchSubjects();\n  }, [testCreationTableId]);\n  useEffect(() => {\n    const fetchSections = async () => {\n      try {\n        const response = await fetch(`http://localhost:4009/fetchSections/${testCreationTableId}`);\n        const data = await response.json();\n        setSections(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchSections();\n  }, [testCreationTableId]);\n  useEffect(() => {\n    const fetchQuestionData = async () => {\n      try {\n        const response = await fetch(`http://localhost:4009/getPaperData/${testCreationTableId}`);\n        const data = await response.json();\n        setQuestionData(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchQuestionData();\n  }, [testCreationTableId]);\n  const [selectedAnswers, setSelectedAnswers] = useState(Array(questionData.length).fill(\"\"));\n  const handleNextClick = () => {\n    // Update the current question index to move to the next question\n    setCurrentQuestionIndex(prevIndex => prevIndex < questionData.length - 1 ? prevIndex + 1 : prevIndex);\n  };\n  const onAnswerSelected = optionIndex => {\n    const updatedSelectedAnswers = [...selectedAnswers];\n    updatedSelectedAnswers[currentQuestionIndex] = optionIndex;\n    setSelectedAnswers(updatedSelectedAnswers);\n  };\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const clearResponse = () => {\n    const updatedSelectedAnswers = [...selectedAnswers];\n    updatedSelectedAnswers[activeQuestion] = \"\";\n    setSelectedAnswers(updatedSelectedAnswers);\n  };\n  const goToPreviousQuestion = () => {\n    setCurrentQuestionIndex(prevIndex => {\n      // Save the current timer value for the question\n\n      const updatedTimers = [...timers];\n      updatedTimers[prevIndex] = timer;\n      setTimers(updatedTimers);\n\n      // Move to the previous question\n\n      return prevIndex - 1;\n    });\n    if (questionData > 0) {\n      setActiveQuestion(questionData - 1);\n    }\n  };\n\n  // ---------------------------------Timer code Start--------------------------------\n  const [timer, setTimer] = useState(0);\n  const [timers, setTimers] = useState(new Array(questionData.length).fill(0));\n  const formatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const remainingSeconds = seconds % 60;\n    return `${hours > 9 ? hours : \"0\" + hours}:${minutes > 9 ? minutes : \"0\" + minutes}:${remainingSeconds > 9 ? remainingSeconds : \"0\" + remainingSeconds}`;\n  };\n  useEffect(() => {\n    // Set the timer to the saved value for the current question\n    setTimer(timers[currentQuestionIndex] || 0);\n    let interval;\n    interval = setInterval(() => {\n      setTimer(prevTimer => prevTimer + 1);\n    }, 1000);\n    // Clear the interval when the component unmounts or when the user moves to the next question\n    return () => {\n      clearInterval(interval);\n    };\n  }, [currentQuestionIndex, timers]);\n  // ------------------------------------Timer code end--------------------------------\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PaperHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subjects\",\n      children: Subjects.map((subjectTitle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"subject-btn\",\n          children: subjectTitle.subjectName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"second-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-select-question\",\n        children: sections.map((sectionTitle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: sectionTitle.sectionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"marks\",\n          children: [\"Marks: \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plus-mark\",\n            children: \"+1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"minus-mark\",\n            children: \"-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Timer: \", formatTime(timer)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), questionData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [currentQuestionIndex + 1, \".\", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/png;base64,${questionData[currentQuestionIndex].question_img}`,\n          src: questionData[currentQuestionIndex].question_img,\n          alt: `Question ${currentQuestionIndex + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), questionData[currentQuestionIndex].optionImages.map((OptionImage, optionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question-${currentQuestionIndex}-option`,\n          value: optionIndex,\n          checked: selectedAnswers[currentQuestionIndex] === optionIndex,\n          onChange: () => onAnswerSelected(optionIndex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: OptionImage.option_img,\n          alt: `Option ${optionIndex + 1}`\n        }, optionIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }, this)]\n      }, optionIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-btn\",\n          onClick: clearResponse,\n          children: \"Clear Response\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"previous-btn\",\n          onClick: goToPreviousQuestion,\n          disabled: questionData === 0,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-angles-left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), \" Previous\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-btn\",\n          onClick: handleNextClick,\n          children: [\"Next \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-angles-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n};\n_s(Paper1, \"0hAN0UvJxykzlI7hBdk7c9cPQ1c=\", false, function () {\n  return [useParams];\n});\n_c = Paper1;\nexport default Paper1;\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n\n// const Paper1 = () => {\n//   const [sections, setSections] = useState([]);\n//   const { testCreationTableId } = useParams();\n\n//   useEffect(() => {\n//     const fetchSections = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:4009/quiz_all/${testCreationTableId}`);\n\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! Status: ${response.status}`);\n//         }\n\n//         const data = await response.json();\n//         console.log('Received data:', data);\n//         setSections(data);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n\n//     fetchSections();\n//   }, [testCreationTableId]); // Use testCreationTableId as a dependency to trigger fetch when it changes\n\n//   return (\n//     <div>\n//       {Object.values(sections).map((section) => (\n//         <div key={section.sectionId}>\n//           <h2>{section.sectionName}</h2>\n//           {section.questions.map((question) => (\n//             <div key={question.qustion_id}>\n//               {/* Display question image */}\n//               <img src={`data:image/png;base64,${question.question_img}`} alt={`Question ${question.qustion_id}`} />\n\n//               {/* Display option images */}\n//               <ul>\n//                 {question.option_img.map((option, index) => (\n//                   <li key={index}>\n//                     <img src={`data:image/png;base64,${option.option_img}`} alt={`Option ${option.Option_Index}`} />\n//                   </li>\n//                 ))}\n//               </ul>\n//             </div>\n//           ))}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Paper1;\nvar _c;\n$RefreshReg$(_c, \"Paper1\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","PaperHeader","jsxDEV","_jsxDEV","Paper1","_s","questionData","setQuestionData","currentQuestionIndex","setCurrentQuestionIndex","Subjects","setSubjects","testCreationTableId","subjectId","sections","setSections","fetchSubjects","response","fetch","data","json","error","console","fetchSections","fetchQuestionData","selectedAnswers","setSelectedAnswers","Array","length","fill","handleNextClick","prevIndex","onAnswerSelected","optionIndex","updatedSelectedAnswers","activeQuestion","setActiveQuestion","clearResponse","goToPreviousQuestion","updatedTimers","timers","timer","setTimers","setTimer","formatTime","seconds","hours","Math","floor","minutes","remainingSeconds","interval","setInterval","prevTimer","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","subjectTitle","index","subjectName","sectionTitle","sectionName","src","question_img","alt","optionImages","OptionImage","type","name","value","checked","onChange","option_img","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/web projects files/Current_egate_Quiz_project/src/Pages/Paper/Paper1.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// // import { useParams } from \"react-router-dom\";\r\n\r\n// const Paper1 = () => {\r\n//   // const { subi_id } = useParams();\r\n//   //     const [quizData, setQuizData] = useState([]);\r\n\r\n//   // console.log(quizData)\r\n//   // useEffect(() => {\r\n//   //   // Fetch data from the endpoint\r\n//   //   fetch(`http://localhost:10000/quiz_all/`+subi_id)\r\n\r\n//   //     .then((response) => response.json())\r\n//   //     .then((data) => setQuizData(data))\r\n//   //     .catch((error) => console.error('Error fetching data:', error));\r\n//   // }, [subi_id]);\r\n\r\n//   const [subjectNames, setSubjectNames] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetch(`http://localhost:4009/quiz_all/1`)\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         console.log(data); // Log the data received from the API\r\n//         setSubjectNames(data);\r\n//       })\r\n//       .catch((error) => console.error(\"Error fetching data:\", error));\r\n//   }, []);\r\n\r\n//   // const [answer, setAnswer] = useState([]);\r\n//   // useEffect(() => {\r\n//   //   // Fetch data from the endpoint\r\n//   //   fetch(`http://localhost:4009/answers/`)\r\n//   //     .then((response) => response.json())\r\n//   //     .then((data) => setAnswer(data))\r\n//   //     .catch((error) => console.error(\"Error fetching data:\", error));\r\n//   // }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>hii</h1>\r\n\r\n//       <div>\r\n//         {Array.isArray(subjectNames) && subjectNames.length > 0 ? (\r\n//           <div>\r\n//             {subjectNames.map((subjects) => (\r\n//               <li key={subjects.subi_id}>\r\n//                 <p>{subjects.subject_name}</p>\r\n//               </li>\r\n//             ))}\r\n//           </div>\r\n//         ) : (\r\n//           <p>No subjects available.</p>\r\n//         )}\r\n//         {/* <ul>\r\n//            {subjectNames.map((item) => (\r\n//           <li key={item.subi_id}>\r\n//             <p>{item.subject_name}</p>\r\n//           </li>\r\n//         ))}\r\n//         </ul> */}\r\n\r\n//         {/* <button>Mathematics</button>\r\n//                 <button>Physics</button>\r\n//                 <button>Chemistry</button> */}\r\n//       </div>\r\n\r\n//       {/* answers display */}\r\n//       {/* <div>\r\n//       {answer.map((ans) => (\r\n//           <li key={ans.subi_id}>\r\n//             <p>{ans.answer}</p>\r\n//           </li>\r\n//         ))}\r\n//       </div> */}\r\n\r\n//       {/* <h1>Quiz Questions</h1> */}\r\n//       <div>\r\n//         {/* {quizData.map((question) => (\r\n//           <div key={question.question_id}>\r\n//             <h3>Question {question.question_id}</h3>\r\n//             <img\r\n//               src={`data:image/png;base64,${question.question_img}`}\r\n//               alt={`Question ${question.question_id}`}\r\n//             />\r\n//             <ul>\r\n//               {question.options.map((option) => (\r\n//                 <li key={option.option_id}>\r\n//                   <img\r\n//                     src={`data:image/png;base64,${option.option_img}`}\r\n//                     alt={`Option ${option.option_id}`}\r\n//                   />\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           </div>\r\n//         ))} */}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Paper1;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport PaperHeader from \"../../Components/PaperHeader/PaperHeader\";\r\nimport \"./Paper.css\";\r\nconst Paper1 = () => {\r\n  const [questionData, setQuestionData] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [Subjects, setSubjects] = useState([]);\r\n  const { testCreationTableId, subjectId } = useParams();\r\n  const [sections, setSections] = useState([]);\r\n\r\n \r\n  useEffect(() => {\r\n    const fetchSubjects = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:4009/subjects/${testCreationTableId}`\r\n        );\r\n        const data = await response.json();\r\n        setSubjects(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchSubjects();\r\n  }, [testCreationTableId]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchSections = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:4009/fetchSections/${testCreationTableId}`\r\n        );\r\n        const data = await response.json();\r\n        setSections(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchSections();\r\n  }, [testCreationTableId]);\r\n\r\n  \r\n  useEffect(() => {\r\n    const fetchQuestionData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:4009/getPaperData/${testCreationTableId}`\r\n        );\r\n        const data = await response.json();\r\n        setQuestionData(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchQuestionData();\r\n  }, [testCreationTableId]);\r\n\r\n\r\n\r\n  const [selectedAnswers, setSelectedAnswers] = useState(\r\n    Array(questionData.length).fill(\"\")\r\n  );\r\n\r\n  const handleNextClick = () => {\r\n    // Update the current question index to move to the next question\r\n    setCurrentQuestionIndex((prevIndex) =>\r\n      prevIndex < questionData.length - 1 ? prevIndex + 1 : prevIndex\r\n    );\r\n  };\r\n\r\n  const onAnswerSelected = (optionIndex) => {\r\n    const updatedSelectedAnswers = [...selectedAnswers];\r\n    updatedSelectedAnswers[currentQuestionIndex] = optionIndex;\r\n    setSelectedAnswers(updatedSelectedAnswers);\r\n  };\r\n\r\n  const [activeQuestion, setActiveQuestion] = useState(0);\r\n  const clearResponse = () => {\r\n    const updatedSelectedAnswers = [...selectedAnswers];\r\n    updatedSelectedAnswers[activeQuestion] = \"\";\r\n    setSelectedAnswers(updatedSelectedAnswers);\r\n  };\r\n\r\n  const goToPreviousQuestion = () => {\r\n    setCurrentQuestionIndex((prevIndex) => {\r\n      // Save the current timer value for the question\r\n    \r\n      const updatedTimers = [...timers];\r\n\r\n      updatedTimers[prevIndex] = timer;\r\n\r\n      setTimers(updatedTimers);\r\n\r\n      // Move to the previous question\r\n\r\n      return prevIndex - 1;\r\n    });\r\n\r\n    if (questionData > 0) {\r\n      setActiveQuestion(questionData - 1);\r\n    }\r\n  };\r\n\r\n  // ---------------------------------Timer code Start--------------------------------\r\n  const [timer, setTimer] = useState(0);\r\n  const [timers, setTimers] = useState(new Array(questionData.length).fill(0));\r\n\r\n  const formatTime = (seconds) => {\r\n    const hours = Math.floor(seconds / 3600);\r\n\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n\r\n    const remainingSeconds = seconds % 60;\r\n\r\n    return `${hours > 9 ? hours : \"0\" + hours}:${\r\n      minutes > 9 ? minutes : \"0\" + minutes\r\n    }:${remainingSeconds > 9 ? remainingSeconds : \"0\" + remainingSeconds}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Set the timer to the saved value for the current question\r\n    setTimer(timers[currentQuestionIndex] || 0);\r\n    let interval;\r\n    interval = setInterval(() => {\r\n      setTimer((prevTimer) => prevTimer + 1);\r\n    }, 1000);\r\n    // Clear the interval when the component unmounts or when the user moves to the next question\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [currentQuestionIndex, timers]);\r\n  // ------------------------------------Timer code end--------------------------------\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <PaperHeader />\r\n      </div>\r\n      <div className=\"subjects\">\r\n        {Subjects.map((subjectTitle, index) => (\r\n          <li key={index}>\r\n            <button className=\"subject-btn\">{subjectTitle.subjectName}</button>\r\n          </li>\r\n        ))}\r\n      </div>\r\n      <div className=\"second-header\">\r\n        <div className=\"single-select-question\">\r\n          {sections.map((sectionTitle,index)=>(\r\n            <li key={index}>\r\n              <p>{sectionTitle.sectionName}</p>\r\n            </li>\r\n          ))}\r\n          {/* Single Select Question */}\r\n        </div>\r\n        <div className=\"right-header\">\r\n          <div className=\"marks\">\r\n            Marks: <div className=\"plus-mark\">+1</div>\r\n            <div className=\"minus-mark\">-1</div>\r\n          </div>\r\n          <div>Timer: {formatTime(timer)}</div>\r\n        </div>\r\n      </div>\r\n      {questionData.length > 0 && (\r\n        <div>\r\n          \r\n          <h4>\r\n            {currentQuestionIndex + 1}.\r\n            <img\r\n             src={`data:image/png;base64,${questionData[currentQuestionIndex].question_img}`}\r\n              src={questionData[currentQuestionIndex].question_img}\r\n              alt={`Question ${currentQuestionIndex + 1}`}\r\n            />\r\n          </h4>\r\n\r\n          {questionData[currentQuestionIndex].optionImages.map(\r\n            (OptionImage, optionIndex) => (\r\n              <li key={optionIndex}>\r\n                <input\r\n                  type=\"radio\"\r\n                  name={`question-${currentQuestionIndex}-option`}\r\n                  value={optionIndex}\r\n                  checked={\r\n                    selectedAnswers[currentQuestionIndex] === optionIndex\r\n                  }\r\n                  onChange={() => onAnswerSelected(optionIndex)}\r\n                />\r\n                <img\r\n                  key={optionIndex}\r\n                  src={OptionImage.option_img}\r\n                  alt={`Option ${optionIndex + 1}`}\r\n                />\r\n              </li>\r\n            )\r\n          )}\r\n          <div className=\"flex-right\">\r\n            <button className=\"clear-btn\" onClick={clearResponse}>\r\n              Clear Response\r\n            </button>\r\n            <button\r\n              className=\"previous-btn\"\r\n              onClick={goToPreviousQuestion}\r\n              disabled={questionData === 0}\r\n            >\r\n              <i className=\"fa-solid fa-angles-left\"></i> Previous\r\n            </button>\r\n            <button className=\"save-btn\" onClick={handleNextClick}>\r\n              Next <i className=\"fa-solid fa-angles-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paper1;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n\r\n// const Paper1 = () => {\r\n//   const [sections, setSections] = useState([]);\r\n//   const { testCreationTableId } = useParams();\r\n\r\n//   useEffect(() => {\r\n//     const fetchSections = async () => {\r\n//       try {\r\n//         const response = await fetch(`http://localhost:4009/quiz_all/${testCreationTableId}`);\r\n\r\n//         if (!response.ok) {\r\n//           throw new Error(`HTTP error! Status: ${response.status}`);\r\n//         }\r\n\r\n//         const data = await response.json();\r\n//         console.log('Received data:', data);\r\n//         setSections(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching data:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchSections();\r\n//   }, [testCreationTableId]); // Use testCreationTableId as a dependency to trigger fetch when it changes\r\n\r\n//   return (\r\n//     <div>\r\n//       {Object.values(sections).map((section) => (\r\n//         <div key={section.sectionId}>\r\n//           <h2>{section.sectionName}</h2>\r\n//           {section.questions.map((question) => (\r\n//             <div key={question.qustion_id}>\r\n//               {/* Display question image */}\r\n//               <img src={`data:image/png;base64,${question.question_img}`} alt={`Question ${question.qustion_id}`} />\r\n\r\n//               {/* Display option images */}\r\n//               <ul>\r\n//                 {question.option_img.map((option, index) => (\r\n//                   <li key={index}>\r\n//                     <img src={`data:image/png;base64,${option.option_img}`} alt={`Option ${option.Option_Index}`} />\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Paper1;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}