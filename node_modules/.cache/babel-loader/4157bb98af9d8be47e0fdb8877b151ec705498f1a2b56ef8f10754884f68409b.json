{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/egate_Quiz_project/src/Pages/MainQuizFunctionality/QuestionsFunctionality.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport PaperHeader from \"../../Components/PaperHeader/PaperHeader\";\nimport \"../Paper/Paper.css\";\nimport ButtonsFunctionality from \"./ButtonsFunctionality\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsFunctionality = () => {\n  _s();\n  const [questionData, setQuestionData] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [Subjects, setSubjects] = useState([]);\n  const {\n    testCreationTableId,\n    subjectId\n  } = useParams();\n  const [sections, setSections] = useState([]);\n  useEffect(() => {\n    const fetchSubjects = async () => {\n      try {\n        const response = await fetch(`http://localhost:4009/subjects/${testCreationTableId}`);\n        const data = await response.json();\n        setSubjects(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchSubjects();\n  }, [testCreationTableId]);\n  useEffect(() => {\n    const fetchSections = async () => {\n      try {\n        const response = await fetch(`http://localhost:4009/fetchSections/${testCreationTableId}`);\n        const data = await response.json();\n        setSections(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchSections();\n  }, [testCreationTableId]);\n  useEffect(() => {\n    const fetchQuestionData = async () => {\n      try {\n        const response = await fetch(`http://localhost:4009/getPaperData/${testCreationTableId}`);\n        const data = await response.json();\n\n        // Check if the data has both 'questions' and 'options' properties\n        if (data && data.questions && data.options) {\n          // Assuming both questions and options are arrays, you might want to merge them\n          const mergedData = data.questions.map((question, index) => ({\n            ...question,\n            options: data.options.slice(index * 4, (index + 1) * 4) // Assuming 4 options per question\n          }));\n\n          setQuestionData(mergedData);\n        } else {\n          console.error(\"API response does not have expected structure:\", data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchQuestionData();\n  }, [testCreationTableId]);\n  const [selectedAnswers, setSelectedAnswers] = useState(Array(questionData.length).fill(\"\"));\n  const handleNextClick = () => {\n    // Update the current question index to move to the next question\n    setCurrentQuestionIndex(prevIndex => prevIndex < questionData.length - 1 ? prevIndex + 1 : prevIndex);\n  };\n  const onAnswerSelected = optionIndex => {\n    const updatedSelectedAnswers = [...selectedAnswers];\n    updatedSelectedAnswers[currentQuestionIndex] = optionIndex;\n    setSelectedAnswers(updatedSelectedAnswers);\n  };\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  // const clearResponse = () => {\n  //   const updatedSelectedAnswers = [...selectedAnswers];\n  //   updatedSelectedAnswers[activeQuestion] = \"\";\n  //   setSelectedAnswers(updatedSelectedAnswers);\n  // };\n  const clearResponse = () => {\n    const updatedSelectedAnswers = [...selectedAnswers];\n    updatedSelectedAnswers[currentQuestionIndex] = \"\";\n    setSelectedAnswers(updatedSelectedAnswers);\n  };\n  const goToPreviousQuestion = () => {\n    setCurrentQuestionIndex(prevIndex => {\n      // Save the current timer value for the question\n      const updatedTimers = [...timers];\n      updatedTimers[prevIndex] = timer;\n      setTimers(updatedTimers);\n      // Move to the previous question\n      return prevIndex - 1;\n    });\n    if (questionData > 0) {\n      setActiveQuestion(questionData - 1);\n    }\n  };\n\n  // ---------------------------------Timer code Start--------------------------------\n  const [timer, setTimer] = useState(0);\n  const [timers, setTimers] = useState(new Array(questionData.length).fill(0));\n  const formatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const remainingSeconds = seconds % 60;\n    return `${hours > 9 ? hours : \"0\" + hours}:${minutes > 9 ? minutes : \"0\" + minutes}:${remainingSeconds > 9 ? remainingSeconds : \"0\" + remainingSeconds}`;\n  };\n  useEffect(() => {\n    // Set the timer to the saved value for the current question\n    setTimer(timers[currentQuestionIndex] || 0);\n    let interval;\n    interval = setInterval(() => {\n      setTimer(prevTimer => prevTimer + 1);\n    }, 1000);\n    // Clear the interval when the component unmounts or when the user moves to the next question\n    return () => {\n      clearInterval(interval);\n    };\n  }, [currentQuestionIndex, timers]);\n  // ------------------------------------Timer code end--------------------------------\n\n  const [opensubject_1, setOpensubject_1] = useState(true);\n  const [opensubject_2, setOpensubject_2] = useState(false);\n  const [opensubject_3, setOpensubject_3] = useState(false);\n  const openAlertSubject1 = () => {\n    setOpensubject_1(true);\n    setOpensubject_2(false);\n    setOpensubject_3(false);\n  };\n  const openAlertSubject2 = () => {\n    setOpensubject_2(true);\n    setOpensubject_1(false);\n    setOpensubject_3(false);\n  };\n  const openAlertSubject3 = () => {\n    setOpensubject_3(true);\n    setOpensubject_2(false);\n    setOpensubject_1(false);\n  };\n  const handleQuestionSelect = questionNumber => {\n    setCurrentQuestionIndex(questionNumber - 1);\n    setActiveQuestion(questionNumber - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PaperHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subjects\",\n      children: Subjects.map((subjectTitle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"subject-btn\",\n            children: subjectTitle.subjectName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"second-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-select-question\",\n        children: sections.map((sectionTitle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: sectionTitle.sectionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"marks\",\n          children: [\"Marks: \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plus-mark\",\n            children: \"+1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"minus-mark\",\n            children: \"-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Timer: \", formatTime(timer)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"  Question No. \", currentQuestionIndex + 1, \"  of \", questionData.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), questionData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/png;base64,${questionData[currentQuestionIndex].question_img}`,\n          alt: `Question ${currentQuestionIndex + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this), questionData[currentQuestionIndex].options.map((OptionImage, optionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question-${currentQuestionIndex}-option`,\n          value: optionIndex,\n          checked: selectedAnswers[currentQuestionIndex] === optionIndex,\n          onChange: () => onAnswerSelected(optionIndex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 33\n        }, this), OptionImage && OptionImage.option_img && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/png;base64,${OptionImage.option_img}`,\n          alt: `Option ${optionIndex + 1}`\n        }, OptionImage.question_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 37\n        }, this)]\n      }, optionIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 29\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-btn\",\n          onClick: clearResponse,\n          children: \"Clear Response\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"previous-btn\",\n          onClick: goToPreviousQuestion,\n          disabled: questionData === 0,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-angles-left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this), \" Previous\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-btn\",\n          onClick: handleNextClick,\n          children: [\"Next \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-angles-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightsidebar\",\n      children: [/*#__PURE__*/_jsxDEV(ButtonsFunctionality, {\n        onQuestionSelect: handleQuestionSelect,\n        questionStatus: questionStatus,\n        setQuestionStatus: setQuestionStatus,\n        answeredCount: answeredCount,\n        notAnsweredCount: notAnsweredCount,\n        answeredmarkedForReviewCount: answeredmarkedForReviewCount,\n        markedForReviewCount: markedForReviewCount,\n        VisitedCount: VisitedCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        id: \"resume_btn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionsFunctionality, \"beYeUSQ0pxiuXKkBz8uhh3ckzCg=\", false, function () {\n  return [useParams];\n});\n_c = QuestionsFunctionality;\nexport default QuestionsFunctionality;\nvar _c;\n$RefreshReg$(_c, \"QuestionsFunctionality\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","PaperHeader","ButtonsFunctionality","jsxDEV","_jsxDEV","QuestionsFunctionality","_s","questionData","setQuestionData","currentQuestionIndex","setCurrentQuestionIndex","Subjects","setSubjects","testCreationTableId","subjectId","sections","setSections","fetchSubjects","response","fetch","data","json","error","console","fetchSections","fetchQuestionData","questions","options","mergedData","map","question","index","slice","selectedAnswers","setSelectedAnswers","Array","length","fill","handleNextClick","prevIndex","onAnswerSelected","optionIndex","updatedSelectedAnswers","activeQuestion","setActiveQuestion","clearResponse","goToPreviousQuestion","updatedTimers","timers","timer","setTimers","setTimer","formatTime","seconds","hours","Math","floor","minutes","remainingSeconds","interval","setInterval","prevTimer","clearInterval","opensubject_1","setOpensubject_1","opensubject_2","setOpensubject_2","opensubject_3","setOpensubject_3","openAlertSubject1","openAlertSubject2","openAlertSubject3","handleQuestionSelect","questionNumber","children","fileName","_jsxFileName","lineNumber","columnNumber","className","subjectTitle","subjectName","sectionTitle","sectionName","src","question_img","alt","OptionImage","type","name","value","checked","onChange","option_img","question_id","onClick","disabled","onQuestionSelect","questionStatus","setQuestionStatus","answeredCount","notAnsweredCount","answeredmarkedForReviewCount","markedForReviewCount","VisitedCount","handleSubmit","id","_c","$RefreshReg$"],"sources":["/home/user/Documents/egate_Quiz_project/src/Pages/MainQuizFunctionality/QuestionsFunctionality.jsx"],"sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport PaperHeader from \"../../Components/PaperHeader/PaperHeader\";\nimport \"../Paper/Paper.css\";\nimport ButtonsFunctionality from \"./ButtonsFunctionality\";\n\n\nconst QuestionsFunctionality = () => {\n\n    const [questionData, setQuestionData] = useState([]);\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [Subjects, setSubjects] = useState([]);\n    const { testCreationTableId, subjectId } = useParams();\n    const [sections, setSections] = useState([]);\n\n    useEffect(() => {\n        const fetchSubjects = async () => {\n            try {\n                const response = await fetch(\n                    `http://localhost:4009/subjects/${testCreationTableId}`\n                );\n                const data = await response.json();\n                setSubjects(data);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n        fetchSubjects();\n    }, [testCreationTableId]);\n\n    useEffect(() => {\n        const fetchSections = async () => {\n            try {\n                const response = await fetch(\n                    `http://localhost:4009/fetchSections/${testCreationTableId}`\n                );\n                const data = await response.json();\n                setSections(data);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n        fetchSections();\n    }, [testCreationTableId]);\n\n\n\n    useEffect(() => {\n        const fetchQuestionData = async () => {\n            try {\n                const response = await fetch(\n                    `http://localhost:4009/getPaperData/${testCreationTableId}`\n                );\n                const data = await response.json();\n\n                // Check if the data has both 'questions' and 'options' properties\n                if (data && data.questions && data.options) {\n                    // Assuming both questions and options are arrays, you might want to merge them\n                    const mergedData = data.questions.map((question, index) => ({\n                        ...question,\n                        options: data.options.slice(index * 4, (index + 1) * 4), // Assuming 4 options per question\n                    }));\n\n                    setQuestionData(mergedData);\n                } else {\n                    console.error(\"API response does not have expected structure:\", data);\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n        fetchQuestionData();\n    }, [testCreationTableId]);\n\n\n    const [selectedAnswers, setSelectedAnswers] = useState(\n        Array(questionData.length).fill(\"\")\n    );\n\n    const handleNextClick = () => {\n        // Update the current question index to move to the next question\n        setCurrentQuestionIndex((prevIndex) =>\n            prevIndex < questionData.length - 1 ? prevIndex + 1 : prevIndex\n        );\n    };\n\n    const onAnswerSelected = (optionIndex) => {\n        const updatedSelectedAnswers = [...selectedAnswers];\n        updatedSelectedAnswers[currentQuestionIndex] = optionIndex;\n        setSelectedAnswers(updatedSelectedAnswers);\n    };\n\n    const [activeQuestion, setActiveQuestion] = useState(0);\n    // const clearResponse = () => {\n    //   const updatedSelectedAnswers = [...selectedAnswers];\n    //   updatedSelectedAnswers[activeQuestion] = \"\";\n    //   setSelectedAnswers(updatedSelectedAnswers);\n    // };\n    const clearResponse = () => {\n        const updatedSelectedAnswers = [...selectedAnswers];\n        updatedSelectedAnswers[currentQuestionIndex] = \"\";\n        setSelectedAnswers(updatedSelectedAnswers);\n    };\n\n\n    const goToPreviousQuestion = () => {\n        setCurrentQuestionIndex((prevIndex) => {\n            // Save the current timer value for the question\n            const updatedTimers = [...timers];\n            updatedTimers[prevIndex] = timer;\n            setTimers(updatedTimers);\n            // Move to the previous question\n            return prevIndex - 1;\n        });\n\n        if (questionData > 0) {\n            setActiveQuestion(questionData - 1);\n        }\n    };\n\n\n    // ---------------------------------Timer code Start--------------------------------\n    const [timer, setTimer] = useState(0);\n    const [timers, setTimers] = useState(new Array(questionData.length).fill(0));\n\n    const formatTime = (seconds) => {\n        const hours = Math.floor(seconds / 3600);\n\n        const minutes = Math.floor((seconds % 3600) / 60);\n\n        const remainingSeconds = seconds % 60;\n\n        return `${hours > 9 ? hours : \"0\" + hours}:${minutes > 9 ? minutes : \"0\" + minutes\n            }:${remainingSeconds > 9 ? remainingSeconds : \"0\" + remainingSeconds}`;\n    };\n\n    useEffect(() => {\n        // Set the timer to the saved value for the current question\n        setTimer(timers[currentQuestionIndex] || 0);\n        let interval;\n        interval = setInterval(() => {\n            setTimer((prevTimer) => prevTimer + 1);\n        }, 1000);\n        // Clear the interval when the component unmounts or when the user moves to the next question\n        return () => {\n            clearInterval(interval);\n        };\n    }, [currentQuestionIndex, timers]);\n    // ------------------------------------Timer code end--------------------------------\n\n\n\n\n\n\n    const [opensubject_1, setOpensubject_1] = useState(true);\n    const [opensubject_2, setOpensubject_2] = useState(false);\n    const [opensubject_3, setOpensubject_3] = useState(false);\n  \n    const openAlertSubject1 = () => {\n      setOpensubject_1(true);\n      setOpensubject_2(false);\n      setOpensubject_3(false);\n    };\n    const openAlertSubject2 = () => {\n      setOpensubject_2(true);\n      setOpensubject_1(false);\n      setOpensubject_3(false);\n    };\n    const openAlertSubject3 = () => {\n      setOpensubject_3(true);\n      setOpensubject_2(false);\n      setOpensubject_1(false);\n    };\n  \n    const handleQuestionSelect = (questionNumber) => {\n      setCurrentQuestionIndex(questionNumber - 1);\n      setActiveQuestion(questionNumber - 1);\n    };\n  \n\n\n\n\n\n\n    return (\n        <div>\n            <div>\n                <PaperHeader />\n            </div>\n            <div className=\"subjects\">\n                {Subjects.map((subjectTitle, index) => (\n                    <li key={index}>\n                        <Link ><button className=\"subject-btn\">{subjectTitle.subjectName}</button></Link>\n                        {/* <button className=\"subject-btn\">{subjectTitle.subjectName}</button> */}\n                    </li>\n                ))}\n\n            </div>\n            <div className=\"second-header\">\n                <div className=\"single-select-question\">\n                    {sections.map((sectionTitle, index) => (\n                        <li key={index}>\n                            <p>{sectionTitle.sectionName}</p>\n\n                        </li>\n                    ))}\n                    {/* Single Select Question */}\n                </div>\n                <div className=\"right-header\">\n                    <div className=\"marks\">\n                        Marks: <div className=\"plus-mark\">+1</div>\n                        <div className=\"minus-mark\">-1</div>\n                    </div>\n                    <div>Timer: {formatTime(timer)}</div>\n                </div>\n            </div>\n            <div>\n                <p>  Question No. {currentQuestionIndex + 1}  of {questionData.length}</p>\n            </div>\n\n            {questionData.length > 0 && (\n                <div>\n                    <h4>\n                        {/* {currentQuestionIndex + 1}. */}\n\n                        <img\n                            src={`data:image/png;base64,${questionData[currentQuestionIndex].question_img}`}\n                            alt={`Question ${currentQuestionIndex + 1}`}\n                        />\n                    </h4>\n\n                    {questionData[currentQuestionIndex].options.map(\n                        (OptionImage, optionIndex) => (\n                            <li key={optionIndex}>\n                                <input\n                                    type=\"radio\"\n                                    name={`question-${currentQuestionIndex}-option`}\n                                    value={optionIndex}\n                                    checked={\n                                        selectedAnswers[currentQuestionIndex] === optionIndex\n                                    }\n                                    onChange={() => onAnswerSelected(optionIndex)}\n                                />\n                                {OptionImage && OptionImage.option_img && (\n                                    <img\n                                        key={OptionImage.question_id}\n                                        src={`data:image/png;base64,${OptionImage.option_img}`}\n                                        alt={`Option ${optionIndex + 1}`}\n                                    />\n                                )}\n                            </li>\n                        )\n                    )}\n                    <div className=\"flex-right\">\n                        <button className=\"clear-btn\" onClick={clearResponse}>\n                            Clear Response\n                        </button>\n                        <button\n                            className=\"previous-btn\"\n                            onClick={goToPreviousQuestion}\n                            disabled={questionData === 0}\n                        >\n                            <i className=\"fa-solid fa-angles-left\"></i> Previous\n                        </button>\n                        <button className=\"save-btn\" onClick={handleNextClick}>\n                            Next <i className=\"fa-solid fa-angles-right\"></i>\n                        </button>\n                    </div>\n                </div>\n            )}\n\n\n            <div className=\"rightsidebar\">\n                <ButtonsFunctionality\n                    onQuestionSelect={handleQuestionSelect}\n                    questionStatus={questionStatus}\n                    setQuestionStatus={setQuestionStatus}\n                    answeredCount={answeredCount}\n                    notAnsweredCount={notAnsweredCount}\n                    answeredmarkedForReviewCount={answeredmarkedForReviewCount}\n                    markedForReviewCount={markedForReviewCount}\n                    VisitedCount={VisitedCount}\n                />\n                <button onClick={handleSubmit} id=\"resume_btn\">\n                    Submit\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default QuestionsFunctionality"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}