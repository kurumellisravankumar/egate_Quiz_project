{"ast":null,"code":"var _jsxFileName = \"D:\\\\web projects files\\\\Current_egate_Quiz_project\\\\src\\\\Pages\\\\Paper\\\\Paper1.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// // import { useParams } from \"react-router-dom\";\n\n// const Paper1 = () => {\n//   // const { subi_id } = useParams();\n//   //     const [quizData, setQuizData] = useState([]);\n\n//   // console.log(quizData)\n//   // useEffect(() => {\n//   //   // Fetch data from the endpoint\n//   //   fetch(`http://localhost:10000/quiz_all/`+subi_id)\n\n//   //     .then((response) => response.json())\n//   //     .then((data) => setQuizData(data))\n//   //     .catch((error) => console.error('Error fetching data:', error));\n//   // }, [subi_id]);\n\n//   const [subjectNames, setSubjectNames] = useState([]);\n\n//   useEffect(() => {\n//     fetch(`http://localhost:4009/quiz_all/1`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log(data); // Log the data received from the API\n//         setSubjectNames(data);\n//       })\n//       .catch((error) => console.error(\"Error fetching data:\", error));\n//   }, []);\n\n//   // const [answer, setAnswer] = useState([]);\n//   // useEffect(() => {\n//   //   // Fetch data from the endpoint\n//   //   fetch(`http://localhost:4009/answers/`)\n//   //     .then((response) => response.json())\n//   //     .then((data) => setAnswer(data))\n//   //     .catch((error) => console.error(\"Error fetching data:\", error));\n//   // }, []);\n\n//   return (\n//     <div>\n//       <h1>hii</h1>\n\n//       <div>\n//         {Array.isArray(subjectNames) && subjectNames.length > 0 ? (\n//           <div>\n//             {subjectNames.map((subjects) => (\n//               <li key={subjects.subi_id}>\n//                 <p>{subjects.subject_name}</p>\n//               </li>\n//             ))}\n//           </div>\n//         ) : (\n//           <p>No subjects available.</p>\n//         )}\n//         {/* <ul>\n//            {subjectNames.map((item) => (\n//           <li key={item.subi_id}>\n//             <p>{item.subject_name}</p>\n//           </li>\n//         ))}\n//         </ul> */}\n\n//         {/* <button>Mathematics</button>\n//                 <button>Physics</button>\n//                 <button>Chemistry</button> */}\n//       </div>\n\n//       {/* answers display */}\n//       {/* <div>\n//       {answer.map((ans) => (\n//           <li key={ans.subi_id}>\n//             <p>{ans.answer}</p>\n//           </li>\n//         ))}\n//       </div> */}\n\n//       {/* <h1>Quiz Questions</h1> */}\n//       <div>\n//         {/* {quizData.map((question) => (\n//           <div key={question.question_id}>\n//             <h3>Question {question.question_id}</h3>\n//             <img\n//               src={`data:image/png;base64,${question.question_img}`}\n//               alt={`Question ${question.question_id}`}\n//             />\n//             <ul>\n//               {question.options.map((option) => (\n//                 <li key={option.option_id}>\n//                   <img\n//                     src={`data:image/png;base64,${option.option_img}`}\n//                     alt={`Option ${option.option_id}`}\n//                   />\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         ))} */}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Paper1;\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Paper1 = () => {\n  _s();\n  const [questionData, setQuestionData] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  useEffect(() => {\n    // Fetch all images from the server\n    fetch(\"http://localhost:4009/getAllImages\").then(response => response.json()).then(data => {\n      if (Array.isArray(data)) {\n        setQuestionData(data);\n      } else {\n        console.error(\"Invalid data structure received from the server:\", data);\n      }\n    }).catch(error => console.error(\"Error fetching images:\", error));\n  }, []);\n  const handleNextClick = () => {\n    // Update the current question index to move to the next question\n    setCurrentQuestionIndex(prevIndex => prevIndex < questionData.length - 1 ? prevIndex + 1 : prevIndex);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: questionData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", currentQuestionIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: questionData[currentQuestionIndex].questionImage,\n        alt: `Question ${currentQuestionIndex + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Option Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), questionData[currentQuestionIndex].optionImages.map((image, optionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"index\"\n          // checked={\n          //   selectedAnswers[activeQuestion] ===\n          //   String.fromCharCode(65 + optIndex)\n          // }\n          // onChange={() =>\n          //   onAnswerSelected(String.fromCharCode(65 + optIndex))\n          // }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: `Option ${optionIndex + 1}`\n        }, optionIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this)]\n      }, optionIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextClick,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(Paper1, \"ToE5As5gyunVH847sV1jKC0zpKE=\");\n_c = Paper1;\nexport default Paper1;\nvar _c;\n$RefreshReg$(_c, \"Paper1\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Paper1","_s","questionData","setQuestionData","currentQuestionIndex","setCurrentQuestionIndex","fetch","then","response","json","data","Array","isArray","console","error","catch","handleNextClick","prevIndex","length","children","fileName","_jsxFileName","lineNumber","columnNumber","src","questionImage","alt","optionImages","map","image","optionIndex","type","name","onClick","_c","$RefreshReg$"],"sources":["D:/web projects files/Current_egate_Quiz_project/src/Pages/Paper/Paper1.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// // import { useParams } from \"react-router-dom\";\r\n\r\n// const Paper1 = () => {\r\n//   // const { subi_id } = useParams();\r\n//   //     const [quizData, setQuizData] = useState([]);\r\n\r\n//   // console.log(quizData)\r\n//   // useEffect(() => {\r\n//   //   // Fetch data from the endpoint\r\n//   //   fetch(`http://localhost:10000/quiz_all/`+subi_id)\r\n\r\n//   //     .then((response) => response.json())\r\n//   //     .then((data) => setQuizData(data))\r\n//   //     .catch((error) => console.error('Error fetching data:', error));\r\n//   // }, [subi_id]);\r\n\r\n//   const [subjectNames, setSubjectNames] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetch(`http://localhost:4009/quiz_all/1`)\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         console.log(data); // Log the data received from the API\r\n//         setSubjectNames(data);\r\n//       })\r\n//       .catch((error) => console.error(\"Error fetching data:\", error));\r\n//   }, []);\r\n\r\n//   // const [answer, setAnswer] = useState([]);\r\n//   // useEffect(() => {\r\n//   //   // Fetch data from the endpoint\r\n//   //   fetch(`http://localhost:4009/answers/`)\r\n//   //     .then((response) => response.json())\r\n//   //     .then((data) => setAnswer(data))\r\n//   //     .catch((error) => console.error(\"Error fetching data:\", error));\r\n//   // }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>hii</h1>\r\n\r\n//       <div>\r\n//         {Array.isArray(subjectNames) && subjectNames.length > 0 ? (\r\n//           <div>\r\n//             {subjectNames.map((subjects) => (\r\n//               <li key={subjects.subi_id}>\r\n//                 <p>{subjects.subject_name}</p>\r\n//               </li>\r\n//             ))}\r\n//           </div>\r\n//         ) : (\r\n//           <p>No subjects available.</p>\r\n//         )}\r\n//         {/* <ul>\r\n//            {subjectNames.map((item) => (\r\n//           <li key={item.subi_id}>\r\n//             <p>{item.subject_name}</p>\r\n//           </li>\r\n//         ))}\r\n//         </ul> */}\r\n\r\n//         {/* <button>Mathematics</button>\r\n//                 <button>Physics</button>\r\n//                 <button>Chemistry</button> */}\r\n//       </div>\r\n\r\n//       {/* answers display */}\r\n//       {/* <div>\r\n//       {answer.map((ans) => (\r\n//           <li key={ans.subi_id}>\r\n//             <p>{ans.answer}</p>\r\n//           </li>\r\n//         ))}\r\n//       </div> */}\r\n\r\n//       {/* <h1>Quiz Questions</h1> */}\r\n//       <div>\r\n//         {/* {quizData.map((question) => (\r\n//           <div key={question.question_id}>\r\n//             <h3>Question {question.question_id}</h3>\r\n//             <img\r\n//               src={`data:image/png;base64,${question.question_img}`}\r\n//               alt={`Question ${question.question_id}`}\r\n//             />\r\n//             <ul>\r\n//               {question.options.map((option) => (\r\n//                 <li key={option.option_id}>\r\n//                   <img\r\n//                     src={`data:image/png;base64,${option.option_img}`}\r\n//                     alt={`Option ${option.option_id}`}\r\n//                   />\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           </div>\r\n//         ))} */}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Paper1;\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Paper1 = () => {\r\n  const [questionData, setQuestionData] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Fetch all images from the server\r\n    fetch(\"http://localhost:4009/getAllImages\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (Array.isArray(data)) {\r\n          setQuestionData(data);\r\n        } else {\r\n          console.error(\r\n            \"Invalid data structure received from the server:\",\r\n            data\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error fetching images:\", error));\r\n  }, []);\r\n\r\n  const handleNextClick = () => {\r\n    // Update the current question index to move to the next question\r\n    setCurrentQuestionIndex((prevIndex) =>\r\n      prevIndex < questionData.length - 1 ? prevIndex + 1 : prevIndex\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {questionData.length > 0 && (\r\n        <div>\r\n          <h2> {currentQuestionIndex + 1}</h2>\r\n          <img\r\n            src={questionData[currentQuestionIndex].questionImage}\r\n            alt={`Question ${currentQuestionIndex + 1}`}\r\n          />\r\n\r\n          <h3>Option Images</h3>\r\n          {questionData[currentQuestionIndex].optionImages.map(\r\n            (image, optionIndex) => (\r\n              <li key={optionIndex}>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"index\"\r\n                  // checked={\r\n                  //   selectedAnswers[activeQuestion] ===\r\n                  //   String.fromCharCode(65 + optIndex)\r\n                  // }\r\n                  // onChange={() =>\r\n                  //   onAnswerSelected(String.fromCharCode(65 + optIndex))\r\n                  // }\r\n                />\r\n                <img\r\n                  key={optionIndex}\r\n                  src={image}\r\n                  alt={`Option ${optionIndex + 1}`}\r\n                />\r\n              </li>\r\n            )\r\n          )}\r\n\r\n          <button onClick={handleNextClick}>Next</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paper1;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}