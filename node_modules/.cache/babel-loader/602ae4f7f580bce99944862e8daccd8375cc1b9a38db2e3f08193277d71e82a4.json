{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\egate_Quiz_project\\\\src\\\\Components\\\\RightSidebar\\\\RightSidebar.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react'\n\n// import './RightSidebar.css'\n\n// const buttons = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\n\n// // const renderList = buttons.map((item, index) =>\n// //     <div key={index}><button className='quesAns-btn'>{item}</button></div>\n// // )\n\n// const RightSidebar = ({ onQuestionSelect, questionStatus }) => {\n\n//     const [answeredQuestions, setAnsweredQuestions] = useState([]);\n\n//     const handleButtonClick = (questionNumber)=> {\n//         onQuestionSelect(questionNumber);\n//         setAnsweredQuestions([...answeredQuestions, questionNumber])\n//     }\n\n//     const renderList = buttons.map((item, index) => {\n//          let className = 'quesAns-btn';\n//          if(questionStatus && questionStatus[index] === 'answered'){\n//             className += 'answered';\n//          }\n//         return(\n//             <div>\n//                 <button className={className} onClick={() => handleButtonClick(item)}>{item}</button>\n//             </div>\n//         )\n\n//     })\n\n//     // const buttonClass = isAnswered ? 'quesAns-btn-green' : 'quesAns-btn';\n\n//     // const renderList = buttons.map((item) => {\n\n//     //     return (\n//     //         <div>\n//     //             <button className='quesAns-btn' onClick={() => handleButtonClick(item)}>{item}</button>\n//     //         </div>\n//     //     )\n//     // })\n\n//     // const renderList = buttons.map((item) =>\n//     //     <div>\n//     //         <button className='quesAns-btn' onClick={() => handleButtonClick(item)}>{item}</button>\n//     //     </div>\n//     // )\n\n//     // const renderList = buttons.map((item) => {\n\n//     //     const isAnswered = answeredQuestions.includes(item);\n//     //     const buttonClass = isAnswered ? 'quesAns-btn-green' : 'quesAns-btn';\n//     //     return(\n//     //         <div>\n//     //             <button className={buttonClass} onClick={() => handleButtonClick(item)}>{item}</button>\n//     //         </div>\n//     //     )\n//     // })\n\n//     return (\n\n//         <div className='right-side-bar'>\n//             <div className='rightSidebar-topHeader'><p>Name of the person</p>\n//             <p>Remaining Time: 1:10:30</p>\n//             </div>\n//             <div className='sidebar-header'>\n//                 <p className='header-para'>You are viewing <span className='subject'>Mathematics</span> Section Question Palette</p>\n//             </div>\n\n//             <div className='ques-btn'>\n//                 <ul className='btn-ul'>{renderList}</ul>\n//             </div>\n\n//             {/* <div key={index}>\n//                 <button className='quesAns-btn'>{item}</button>\n//             </div> */}\n\n//             <div className='sidebar-footer'>\n//                 <h4 className='sidebar-footer-header'>Legend</h4>\n//                 <div className='footer-btns'>\n//                     <div className='inst-btns'><button className='instruction-btn1'>0</button><p>Answerd</p><br /></div><br />\n//                     <div className='inst-btns'><button className='instruction-btn2'>0</button><p>Not Answered</p><br /></div><br />\n//                     <div className='inst-btns'><button className='instruction-btn3'>0</button><p>Marked</p><br /></div><br />\n//                     <div className='inst-btns'><button className='instruction-btn4'>0</button><p>Not Visited</p></div>\n//                 </div>\n//             </div>\n\n//         </div>\n//     )\n\n// }\n\n// export default RightSidebar\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './RightSidebar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttons = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\n\n// const renderList = buttons.map((item, index) =>\n//     <div key={index}><button className='quesAns-btn'>{item}</button></div>\n// )\n\nconst RightSidebar = ({\n  onQuestionSelect,\n  questionStatus,\n  seconds\n}) => {\n  _s();\n  const [answeredQuestions, setAnsweredQuestions] = useState([]);\n  const [isPaused, setIsPaused] = useState(false);\n  const handleButtonClick = questionNumber => {\n    onQuestionSelect(questionNumber);\n    setAnsweredQuestions([...answeredQuestions, questionNumber]);\n    setIsPaused(false);\n  };\n  RightSidebar.propTypes = {\n    onQuestionSelect: PropTypes.func.isRequired,\n    questionStatus: PropTypes.arrayOf(PropTypes.string),\n    onResumeTimer: PropTypes.func.isRequired // Define the prop type for onResumeTimer\n  };\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [timers, setTimers] = useState(new Array().fill(0));\n  const [timer, setTimer] = useState(0);\n  useEffect(() => {\n    // Set the timer to the saved value for the current question\n    setTimer(timers[currentQuestionIndex] || 0);\n    let interval;\n    // interval = setInterval(() => {\n    //     setTimer(prevTimer => prevTimer + 1);\n    // }, 1000);\n\n    if (!isPaused) {\n      interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer + 1);\n      }, 1000);\n    }\n\n    // Clear the interval when the component unmounts or when the user moves to the next question\n    return () => {\n      clearInterval(interval);\n    };\n  }, [currentQuestionIndex, timers, isPaused]);\n  const renderList = buttons.map((item, index) => {\n    let className = 'quesAns-btn';\n    if (questionStatus && questionStatus[index] === 'answered') {\n      className += 'answered';\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: className,\n        onClick: () => handleButtonClick(item),\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this);\n  });\n\n  // const buttonClass = isAnswered ? 'quesAns-btn-green' : 'quesAns-btn';\n\n  // const renderList = buttons.map((item) => {\n\n  //     return (\n  //         <div>\n  //             <button className='quesAns-btn' onClick={() => handleButtonClick(item)}>{item}</button>\n  //         </div>\n  //     )\n  // })\n\n  // const renderList = buttons.map((item) =>\n  //     <div>\n  //         <button className='quesAns-btn' onClick={() => handleButtonClick(item)}>{item}</button>\n  //     </div>\n  // )\n\n  // const renderList = buttons.map((item) => {\n\n  //     const isAnswered = answeredQuestions.includes(item);\n  //     const buttonClass = isAnswered ? 'quesAns-btn-green' : 'quesAns-btn';\n  //     return(\n  //         <div>\n  //             <button className={buttonClass} onClick={() => handleButtonClick(item)}>{item}</button>\n  //         </div>\n  //     )\n  // })\n\n  const totalTime = 180 * 60; // 180 minutes in seconds\n  const [wtimer, setWTimer] = useState(totalTime);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setWTimer(prevTimer => prevTimer - 1);\n    }, 1000);\n\n    // Clear the interval and handle time-up logic when timer reaches 0\n    if (wtimer <= 0) {\n      clearInterval(interval);\n      // Handle time-up logic here (e.g., navigate to a different component)\n    }\n\n    // Clean up the interval on component unmount or when navigating away\n    return () => {\n      clearInterval(interval);\n    };\n  }, [wtimer]);\n  const WformatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const remainingSeconds = seconds % 60;\n    return `${hours > 9 ? hours : '0' + hours}:${minutes > 9 ? minutes : '0' + minutes}:${remainingSeconds > 9 ? remainingSeconds : '0' + remainingSeconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"right-side-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSidebar-topHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name of the person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 53\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time Left:  \", WformatTime(wtimer)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"header-para\",\n        children: [\"You are viewing \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"subject\",\n          children: \"Mathematics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 60\n        }, this), \" Section Question Palette\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ques-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"btn-ul\",\n        children: renderList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"sidebar-footer-header\",\n        children: \"Legend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inst-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"instruction-btn1\",\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Answerd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 95\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 109\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 121\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inst-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"instruction-btn2\",\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Not Answered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 95\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 114\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 126\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inst-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"instruction-btn3\",\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Marked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 95\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 108\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 120\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inst-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"instruction-btn4\",\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Answered but marked for review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 95\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 138\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inst-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"instruction-btn5\",\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Not Visited\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 95\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 9\n  }, this);\n};\n_s(RightSidebar, \"Y/Jj4IfsBUMwPiucbNbDtuD4tlw=\");\n_c = RightSidebar;\nexport default RightSidebar;\nvar _c;\n$RefreshReg$(_c, \"RightSidebar\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","buttons","RightSidebar","onQuestionSelect","questionStatus","seconds","_s","answeredQuestions","setAnsweredQuestions","isPaused","setIsPaused","handleButtonClick","questionNumber","propTypes","PropTypes","func","isRequired","arrayOf","string","onResumeTimer","currentQuestionIndex","setCurrentQuestionIndex","timers","setTimers","Array","fill","timer","setTimer","interval","setInterval","prevTimer","clearInterval","renderList","map","item","index","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","totalTime","wtimer","setWTimer","WformatTime","hours","Math","floor","minutes","remainingSeconds","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/egate_Quiz_project/src/Components/RightSidebar/RightSidebar.jsx"],"sourcesContent":["// import React, { useState } from 'react'\r\n\r\n// import './RightSidebar.css'\r\n\r\n\r\n\r\n\r\n// const buttons = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\r\n\r\n// // const renderList = buttons.map((item, index) =>\r\n// //     <div key={index}><button className='quesAns-btn'>{item}</button></div>\r\n// // )\r\n\r\n\r\n// const RightSidebar = ({ onQuestionSelect, questionStatus }) => {\r\n\r\n\r\n//     const [answeredQuestions, setAnsweredQuestions] = useState([]);\r\n\r\n//     const handleButtonClick = (questionNumber)=> {\r\n//         onQuestionSelect(questionNumber);\r\n//         setAnsweredQuestions([...answeredQuestions, questionNumber])\r\n//     }\r\n\r\n\r\n\r\n//     const renderList = buttons.map((item, index) => {\r\n//          let className = 'quesAns-btn';\r\n//          if(questionStatus && questionStatus[index] === 'answered'){\r\n//             className += 'answered';\r\n//          }\r\n//         return(\r\n//             <div>\r\n//                 <button className={className} onClick={() => handleButtonClick(item)}>{item}</button>\r\n//             </div>\r\n//         )\r\n\r\n//     })\r\n\r\n\r\n\r\n\r\n//     // const buttonClass = isAnswered ? 'quesAns-btn-green' : 'quesAns-btn';\r\n\r\n\r\n//     // const renderList = buttons.map((item) => {\r\n\r\n       \r\n//     //     return (\r\n//     //         <div>\r\n//     //             <button className='quesAns-btn' onClick={() => handleButtonClick(item)}>{item}</button>\r\n//     //         </div>\r\n//     //     )\r\n//     // })\r\n\r\n\r\n\r\n//     // const renderList = buttons.map((item) =>\r\n//     //     <div>\r\n//     //         <button className='quesAns-btn' onClick={() => handleButtonClick(item)}>{item}</button>\r\n//     //     </div>\r\n//     // )\r\n\r\n//     // const renderList = buttons.map((item) => {\r\n\r\n//     //     const isAnswered = answeredQuestions.includes(item);\r\n//     //     const buttonClass = isAnswered ? 'quesAns-btn-green' : 'quesAns-btn';\r\n//     //     return(\r\n//     //         <div>\r\n//     //             <button className={buttonClass} onClick={() => handleButtonClick(item)}>{item}</button>\r\n//     //         </div>\r\n//     //     )\r\n//     // })\r\n\r\n   \r\n\r\n//     return (\r\n\r\n//         <div className='right-side-bar'>\r\n//             <div className='rightSidebar-topHeader'><p>Name of the person</p>\r\n//             <p>Remaining Time: 1:10:30</p>\r\n//             </div>\r\n//             <div className='sidebar-header'>\r\n//                 <p className='header-para'>You are viewing <span className='subject'>Mathematics</span> Section Question Palette</p>\r\n//             </div>\r\n\r\n//             <div className='ques-btn'>\r\n//                 <ul className='btn-ul'>{renderList}</ul>\r\n//             </div>\r\n\r\n//             {/* <div key={index}>\r\n//                 <button className='quesAns-btn'>{item}</button>\r\n//             </div> */}\r\n\r\n//             <div className='sidebar-footer'>\r\n//                 <h4 className='sidebar-footer-header'>Legend</h4>\r\n//                 <div className='footer-btns'>\r\n//                     <div className='inst-btns'><button className='instruction-btn1'>0</button><p>Answerd</p><br /></div><br />\r\n//                     <div className='inst-btns'><button className='instruction-btn2'>0</button><p>Not Answered</p><br /></div><br />\r\n//                     <div className='inst-btns'><button className='instruction-btn3'>0</button><p>Marked</p><br /></div><br />\r\n//                     <div className='inst-btns'><button className='instruction-btn4'>0</button><p>Not Visited</p></div>\r\n//                 </div>\r\n//             </div>\r\n\r\n//         </div>\r\n//     )\r\n\r\n// }\r\n\r\n\r\n\r\n\r\n// export default RightSidebar\r\n\r\n\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport './RightSidebar.css'\r\n\r\n\r\n\r\n\r\nconst buttons = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\r\n\r\n// const renderList = buttons.map((item, index) =>\r\n//     <div key={index}><button className='quesAns-btn'>{item}</button></div>\r\n// )\r\n\r\n\r\nconst RightSidebar = ({ onQuestionSelect, questionStatus, seconds }) => {\r\n\r\n\r\n    const [answeredQuestions, setAnsweredQuestions] = useState([]);\r\n    const [isPaused, setIsPaused] = useState(false);\r\n\r\n    const handleButtonClick = (questionNumber) => {\r\n        onQuestionSelect(questionNumber);\r\n        setAnsweredQuestions([...answeredQuestions, questionNumber]);\r\n        setIsPaused(false);\r\n    }\r\n\r\n\r\n     \r\n    RightSidebar.propTypes = {\r\n        onQuestionSelect: PropTypes.func.isRequired,\r\n        questionStatus: PropTypes.arrayOf(PropTypes.string),\r\n        onResumeTimer: PropTypes.func.isRequired, // Define the prop type for onResumeTimer\r\n    };\r\n\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [timers, setTimers] = useState(new Array().fill(0));\r\n    const [timer, setTimer] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // Set the timer to the saved value for the current question\r\n        setTimer(timers[currentQuestionIndex] || 0);\r\n\r\n        let interval;\r\n        // interval = setInterval(() => {\r\n        //     setTimer(prevTimer => prevTimer + 1);\r\n        // }, 1000);\r\n\r\n        if (!isPaused) {\r\n            interval = setInterval(() => {\r\n                setTimer(prevTimer => prevTimer + 1);\r\n            }, 1000);\r\n        }\r\n\r\n        // Clear the interval when the component unmounts or when the user moves to the next question\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [currentQuestionIndex, timers, isPaused]);\r\n\r\n    const renderList = buttons.map((item, index) => {\r\n        let className = 'quesAns-btn';\r\n        if (questionStatus && questionStatus[index] === 'answered') {\r\n            className += 'answered';\r\n        }\r\n        return (\r\n            <div key={item}>\r\n                <button className={className} onClick={() => handleButtonClick(item)}>{item}</button>\r\n            </div>\r\n        )\r\n\r\n    })\r\n\r\n   \r\n\r\n\r\n\r\n\r\n    // const buttonClass = isAnswered ? 'quesAns-btn-green' : 'quesAns-btn';\r\n\r\n\r\n    // const renderList = buttons.map((item) => {\r\n\r\n\r\n    //     return (\r\n    //         <div>\r\n    //             <button className='quesAns-btn' onClick={() => handleButtonClick(item)}>{item}</button>\r\n    //         </div>\r\n    //     )\r\n    // })\r\n\r\n\r\n\r\n    // const renderList = buttons.map((item) =>\r\n    //     <div>\r\n    //         <button className='quesAns-btn' onClick={() => handleButtonClick(item)}>{item}</button>\r\n    //     </div>\r\n    // )\r\n\r\n    // const renderList = buttons.map((item) => {\r\n\r\n    //     const isAnswered = answeredQuestions.includes(item);\r\n    //     const buttonClass = isAnswered ? 'quesAns-btn-green' : 'quesAns-btn';\r\n    //     return(\r\n    //         <div>\r\n    //             <button className={buttonClass} onClick={() => handleButtonClick(item)}>{item}</button>\r\n    //         </div>\r\n    //     )\r\n    // })\r\n\r\n  \r\n\r\n    const totalTime = 180 * 60; // 180 minutes in seconds\r\n    const [wtimer, setWTimer] = useState(totalTime);\r\n  \r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        setWTimer((prevTimer) => prevTimer - 1);\r\n      }, 1000);\r\n  \r\n      // Clear the interval and handle time-up logic when timer reaches 0\r\n      if (wtimer <= 0) {\r\n        clearInterval(interval);\r\n        // Handle time-up logic here (e.g., navigate to a different component)\r\n      }\r\n  \r\n      // Clean up the interval on component unmount or when navigating away\r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }, [wtimer]);\r\n  \r\n    const WformatTime = (seconds) => {\r\n      const hours = Math.floor(seconds / 3600);\r\n      const minutes = Math.floor((seconds % 3600) / 60);\r\n      const remainingSeconds = seconds % 60;\r\n      return `${hours > 9 ? hours : '0' + hours}:${minutes > 9 ? minutes : '0' + minutes}:${remainingSeconds > 9 ? remainingSeconds : '0' + remainingSeconds}`;\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div className='right-side-bar'>\r\n            <div className='rightSidebar-topHeader'><p>Name of the person</p>\r\n            <p>Time Left:  {WformatTime(wtimer)}</p>\r\n            </div>\r\n            <div className='sidebar-header'>\r\n                <p className='header-para'>You are viewing <span className='subject'>Mathematics</span> Section Question Palette</p>\r\n            </div>\r\n\r\n            <div className='ques-btn'>\r\n                <ul className='btn-ul'>{renderList}</ul>\r\n            </div>\r\n\r\n            {/* <div key={index}>\r\n                <button className='quesAns-btn'>{item}</button>\r\n            </div> */}\r\n\r\n            <div className='sidebar-footer'>\r\n                <h4 className='sidebar-footer-header'>Legend</h4>\r\n                <div className='footer-btns'>\r\n                    <div className='inst-btns'><button className='instruction-btn1'>0</button><p>Answerd</p><br /></div><br />\r\n                    <div className='inst-btns'><button className='instruction-btn2'>0</button><p>Not Answered</p><br /></div><br />\r\n                    <div className='inst-btns'><button className='instruction-btn3'>0</button><p>Marked</p><br /></div><br />\r\n                    <div className='inst-btns'><button className='instruction-btn4'>0</button><p>Answered but marked for review</p></div><br />\r\n                    <div className='inst-btns'><button className='instruction-btn5'>0</button><p>Not Visited</p></div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default RightSidebar"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}