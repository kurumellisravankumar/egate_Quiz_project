{"ast":null,"code":"var _jsxFileName = \"D:\\\\web projects files\\\\Current_egate_Quiz_project\\\\src\\\\Pages\\\\Paper\\\\Paper1.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// // import { useParams } from \"react-router-dom\";\n\n// const Paper1 = () => {\n//   // const { subi_id } = useParams();\n//   //     const [quizData, setQuizData] = useState([]);\n\n//   // console.log(quizData)\n//   // useEffect(() => {\n//   //   // Fetch data from the endpoint\n//   //   fetch(`http://localhost:10000/quiz_all/`+subi_id)\n\n//   //     .then((response) => response.json())\n//   //     .then((data) => setQuizData(data))\n//   //     .catch((error) => console.error('Error fetching data:', error));\n//   // }, [subi_id]);\n\n//   const [subjectNames, setSubjectNames] = useState([]);\n\n//   useEffect(() => {\n//     fetch(`http://localhost:4009/quiz_all/1`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log(data); // Log the data received from the API\n//         setSubjectNames(data);\n//       })\n//       .catch((error) => console.error(\"Error fetching data:\", error));\n//   }, []);\n\n//   // const [answer, setAnswer] = useState([]);\n//   // useEffect(() => {\n//   //   // Fetch data from the endpoint\n//   //   fetch(`http://localhost:4009/answers/`)\n//   //     .then((response) => response.json())\n//   //     .then((data) => setAnswer(data))\n//   //     .catch((error) => console.error(\"Error fetching data:\", error));\n//   // }, []);\n\n//   return (\n//     <div>\n//       <h1>hii</h1>\n\n//       <div>\n//         {Array.isArray(subjectNames) && subjectNames.length > 0 ? (\n//           <div>\n//             {subjectNames.map((subjects) => (\n//               <li key={subjects.subi_id}>\n//                 <p>{subjects.subject_name}</p>\n//               </li>\n//             ))}\n//           </div>\n//         ) : (\n//           <p>No subjects available.</p>\n//         )}\n//         {/* <ul>\n//            {subjectNames.map((item) => (\n//           <li key={item.subi_id}>\n//             <p>{item.subject_name}</p>\n//           </li>\n//         ))}\n//         </ul> */}\n\n//         {/* <button>Mathematics</button>\n//                 <button>Physics</button>\n//                 <button>Chemistry</button> */}\n//       </div>\n\n//       {/* answers display */}\n//       {/* <div>\n//       {answer.map((ans) => (\n//           <li key={ans.subi_id}>\n//             <p>{ans.answer}</p>\n//           </li>\n//         ))}\n//       </div> */}\n\n//       {/* <h1>Quiz Questions</h1> */}\n//       <div>\n//         {/* {quizData.map((question) => (\n//           <div key={question.question_id}>\n//             <h3>Question {question.question_id}</h3>\n//             <img\n//               src={`data:image/png;base64,${question.question_img}`}\n//               alt={`Question ${question.question_id}`}\n//             />\n//             <ul>\n//               {question.options.map((option) => (\n//                 <li key={option.option_id}>\n//                   <img\n//                     src={`data:image/png;base64,${option.option_img}`}\n//                     alt={`Option ${option.option_id}`}\n//                   />\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         ))} */}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Paper1;\n\nimport React, { useState, useEffect } from \"react\";\nimport { DotSpinner } from \"@uiball/loaders\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Paper1 = () => {\n  _s();\n  // const [questionData, setQuestionData] = useState([]);\n\n  // useEffect(() => {\n  //   // Fetch all images from the server\n  //   fetch(\"http://localhost:4009/getAllImages\")\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       if (Array.isArray(data)) {\n  //         setQuestionData(data);\n  //       } else {\n  //         console.error(\n  //           \"Invalid data structure received from the server:\",\n  //           data\n  //         );\n  //       }\n  //     })\n  //     .catch((error) => console.error(\"Error fetching images:\", error));\n  // }, []);\n\n  const [Qimages, setQImages] = useState([]);\n  const [OPTimages, setOPTImages] = useState([]);\n  useEffect(() => {\n    // Fetch data for Qimages (first image from each set of IDs 1-6, 7-12, ...)\n    const fetchQImages = async () => {\n      let fetchedQImages = [];\n      for (let i = 1; i <= 1000; i += 6) {\n        // Assuming there are 100 sets of images\n        try {\n          const response = await fetch(`http://localhost:4009/getAllImages/${i}`);\n          const data = await response.json();\n          if (data.length > 0) {\n            fetchedQImages.push(data[0]); // Add only the first image from each set\n          }\n        } catch (error) {\n          console.error(\"Error fetching Qimages:\", error);\n        }\n      }\n      setQImages(fetchedQImages);\n    };\n\n    // Fetch data for OPTimages (images 2 to 5 from each set of IDs 1-6, 7-12, ...)\n    const fetchOPTImages = async () => {\n      let fetchedOPTImages = [];\n      for (let i = 1; i <= 1000; i += 6) {\n        // Assuming there are 100 sets of images\n        try {\n          for (let j = i + 1; j <= i + 4; j++) {\n            const response = await fetch(`http://localhost:4009/getAllImages/${j}`);\n            const data = await response.json();\n            if (data.length > 0) {\n              fetchedOPTImages.push(data[0]); // Add the second to fifth images from each set\n            }\n          }\n        } catch (error) {\n          console.error(\"Error fetching OPTimages:\", error);\n        }\n      }\n      setOPTImages(fetchedOPTImages);\n    };\n    fetchQImages();\n    fetchOPTImages();\n    updateCounters();\n  }, [questionStatus]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [timers, setTimers] = useState(new Array(questionData.length).fill(0));\n  const [timer, setTimer] = useState(0);\n  const formatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const remainingSeconds = seconds % 60;\n    return `${hours > 9 ? hours : \"0\" + hours}:${minutes > 9 ? minutes : \"0\" + minutes}:${remainingSeconds > 9 ? remainingSeconds : \"0\" + remainingSeconds}`;\n  };\n  useEffect(() => {\n    // Set the timer to the saved value for the current question\n\n    setTimer(timers[currentQuestionIndex] || 0);\n    let interval;\n    interval = setInterval(() => {\n      setTimer(prevTimer => prevTimer + 1);\n    }, 1000);\n\n    // Clear the interval when the component unmounts or when the user moves to the next question\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [currentQuestionIndex, timers]);\n  const [opensubject_1, setOpensubject_1] = useState(true);\n  const [opensubject_2, setOpensubject_2] = useState(false);\n  const [opensubject_3, setOpensubject_3] = useState(false);\n  const openAlertSubject1 = () => {\n    setOpensubject_1(true);\n    setOpensubject_2(false);\n    setOpensubject_3(false);\n  };\n  const openAlertSubject2 = () => {\n    setOpensubject_2(true);\n    setOpensubject_1(false);\n    setOpensubject_3(false);\n  };\n  const openAlertSubject3 = () => {\n    setOpensubject_3(true);\n    setOpensubject_2(false);\n    setOpensubject_1(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subjects\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"subject-btn\",\n        onClick: openAlertSubject1,\n        children: \"Mathematics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"subject-btn\",\n        onClick: openAlertSubject2,\n        children: \"Physics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"subject-btn\",\n        onClick: openAlertSubject3,\n        children: \"Chemistry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"second-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-select-question\",\n        children: \"Single Select Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"marks\",\n          children: [\"Marks: \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plus-mark\",\n            children: \"+1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"minus-mark\",\n            children: \"-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Timer: \", formatTime(timer)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question\",\n        children: Qimages && Qimages.length > 0 && Qimages[activeQuestion] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${Qimages[activeQuestion].image_data}`,\n            alt: `QImage ${activeQuestion + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"options-container\",\n            children: OPTimages.slice(activeQuestion * 4, activeQuestion * 4 + 4).map((optImage, optIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"index\",\n                checked: selectedAnswers[activeQuestion] === String.fromCharCode(65 + optIndex),\n                onChange: () => onAnswerSelected(String.fromCharCode(65 + optIndex))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"alpha-index\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `data:image/png;base64,${optImage.image_data}`,\n                  alt: `OPTImage ${optIndex + 2}-${optIndex + 5}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 27\n              }, this)]\n            }, optIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-gif\",\n          children: /*#__PURE__*/_jsxDEV(DotSpinner, {\n            size: 90,\n            speed: 0.9,\n            color: \"black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n};\n_s(Paper1, \"V3/zdo7S/o50rXPVT3sfXmkf7wE=\");\n_c = Paper1;\nexport default Paper1;\nvar _c;\n$RefreshReg$(_c, \"Paper1\");","map":{"version":3,"names":["React","useState","useEffect","DotSpinner","jsxDEV","_jsxDEV","Paper1","_s","Qimages","setQImages","OPTimages","setOPTImages","fetchQImages","fetchedQImages","i","response","fetch","data","json","length","push","error","console","fetchOPTImages","fetchedOPTImages","j","updateCounters","questionStatus","currentQuestionIndex","setCurrentQuestionIndex","timers","setTimers","Array","questionData","fill","timer","setTimer","formatTime","seconds","hours","Math","floor","minutes","remainingSeconds","interval","setInterval","prevTimer","clearInterval","opensubject_1","setOpensubject_1","opensubject_2","setOpensubject_2","opensubject_3","setOpensubject_3","openAlertSubject1","openAlertSubject2","openAlertSubject3","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","activeQuestion","src","image_data","alt","slice","map","optImage","optIndex","type","name","checked","selectedAnswers","String","fromCharCode","onChange","onAnswerSelected","size","speed","color","_c","$RefreshReg$"],"sources":["D:/web projects files/Current_egate_Quiz_project/src/Pages/Paper/Paper1.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// // import { useParams } from \"react-router-dom\";\r\n\r\n// const Paper1 = () => {\r\n//   // const { subi_id } = useParams();\r\n//   //     const [quizData, setQuizData] = useState([]);\r\n\r\n//   // console.log(quizData)\r\n//   // useEffect(() => {\r\n//   //   // Fetch data from the endpoint\r\n//   //   fetch(`http://localhost:10000/quiz_all/`+subi_id)\r\n\r\n//   //     .then((response) => response.json())\r\n//   //     .then((data) => setQuizData(data))\r\n//   //     .catch((error) => console.error('Error fetching data:', error));\r\n//   // }, [subi_id]);\r\n\r\n//   const [subjectNames, setSubjectNames] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetch(`http://localhost:4009/quiz_all/1`)\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         console.log(data); // Log the data received from the API\r\n//         setSubjectNames(data);\r\n//       })\r\n//       .catch((error) => console.error(\"Error fetching data:\", error));\r\n//   }, []);\r\n\r\n//   // const [answer, setAnswer] = useState([]);\r\n//   // useEffect(() => {\r\n//   //   // Fetch data from the endpoint\r\n//   //   fetch(`http://localhost:4009/answers/`)\r\n//   //     .then((response) => response.json())\r\n//   //     .then((data) => setAnswer(data))\r\n//   //     .catch((error) => console.error(\"Error fetching data:\", error));\r\n//   // }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>hii</h1>\r\n\r\n//       <div>\r\n//         {Array.isArray(subjectNames) && subjectNames.length > 0 ? (\r\n//           <div>\r\n//             {subjectNames.map((subjects) => (\r\n//               <li key={subjects.subi_id}>\r\n//                 <p>{subjects.subject_name}</p>\r\n//               </li>\r\n//             ))}\r\n//           </div>\r\n//         ) : (\r\n//           <p>No subjects available.</p>\r\n//         )}\r\n//         {/* <ul>\r\n//            {subjectNames.map((item) => (\r\n//           <li key={item.subi_id}>\r\n//             <p>{item.subject_name}</p>\r\n//           </li>\r\n//         ))}\r\n//         </ul> */}\r\n\r\n//         {/* <button>Mathematics</button>\r\n//                 <button>Physics</button>\r\n//                 <button>Chemistry</button> */}\r\n//       </div>\r\n\r\n//       {/* answers display */}\r\n//       {/* <div>\r\n//       {answer.map((ans) => (\r\n//           <li key={ans.subi_id}>\r\n//             <p>{ans.answer}</p>\r\n//           </li>\r\n//         ))}\r\n//       </div> */}\r\n\r\n//       {/* <h1>Quiz Questions</h1> */}\r\n//       <div>\r\n//         {/* {quizData.map((question) => (\r\n//           <div key={question.question_id}>\r\n//             <h3>Question {question.question_id}</h3>\r\n//             <img\r\n//               src={`data:image/png;base64,${question.question_img}`}\r\n//               alt={`Question ${question.question_id}`}\r\n//             />\r\n//             <ul>\r\n//               {question.options.map((option) => (\r\n//                 <li key={option.option_id}>\r\n//                   <img\r\n//                     src={`data:image/png;base64,${option.option_img}`}\r\n//                     alt={`Option ${option.option_id}`}\r\n//                   />\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           </div>\r\n//         ))} */}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Paper1;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { DotSpinner } from \"@uiball/loaders\";\r\nconst Paper1 = () => {\r\n  // const [questionData, setQuestionData] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   // Fetch all images from the server\r\n  //   fetch(\"http://localhost:4009/getAllImages\")\r\n  //     .then((response) => response.json())\r\n  //     .then((data) => {\r\n  //       if (Array.isArray(data)) {\r\n  //         setQuestionData(data);\r\n  //       } else {\r\n  //         console.error(\r\n  //           \"Invalid data structure received from the server:\",\r\n  //           data\r\n  //         );\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => console.error(\"Error fetching images:\", error));\r\n  // }, []);\r\n\r\n\r\n  \r\n  const [Qimages, setQImages] = useState([]);\r\n  const [OPTimages, setOPTImages] = useState([]);\r\n  useEffect(() => {\r\n    // Fetch data for Qimages (first image from each set of IDs 1-6, 7-12, ...)\r\n    const fetchQImages = async () => {\r\n      let fetchedQImages = [];\r\n\r\n      for (let i = 1; i <= 1000; i += 6) {\r\n        // Assuming there are 100 sets of images\r\n        try {\r\n          const response = await fetch(`http://localhost:4009/getAllImages/${i}`);\r\n          const data = await response.json();\r\n          if (data.length > 0) {\r\n            fetchedQImages.push(data[0]); // Add only the first image from each set\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching Qimages:\", error);\r\n        }\r\n      }\r\n\r\n      setQImages(fetchedQImages);\r\n    };\r\n\r\n    // Fetch data for OPTimages (images 2 to 5 from each set of IDs 1-6, 7-12, ...)\r\n    const fetchOPTImages = async () => {\r\n      let fetchedOPTImages = [];\r\n\r\n      for (let i = 1; i <= 1000; i += 6) {\r\n        // Assuming there are 100 sets of images\r\n        try {\r\n          for (let j = i + 1; j <= i + 4; j++) {\r\n            const response = await fetch(`http://localhost:4009/getAllImages/${j}`);\r\n            const data = await response.json();\r\n            if (data.length > 0) {\r\n              fetchedOPTImages.push(data[0]); // Add the second to fifth images from each set\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching OPTimages:\", error);\r\n        }\r\n      }\r\n\r\n      setOPTImages(fetchedOPTImages);\r\n    };\r\n\r\n    fetchQImages();\r\n    fetchOPTImages();\r\n\r\n\r\n    updateCounters();\r\n  }, [questionStatus]);\r\n\r\n\r\n\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [timers, setTimers] = useState(new Array(questionData.length).fill(0));\r\n  const [timer, setTimer] = useState(0);\r\n\r\n\r\n  const formatTime = (seconds) => {\r\n    const hours = Math.floor(seconds / 3600);\r\n\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n\r\n    const remainingSeconds = seconds % 60;\r\n\r\n    return `${hours > 9 ? hours : \"0\" + hours}:${\r\n      minutes > 9 ? minutes : \"0\" + minutes\r\n    }:${remainingSeconds > 9 ? remainingSeconds : \"0\" + remainingSeconds}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Set the timer to the saved value for the current question\r\n\r\n    setTimer(timers[currentQuestionIndex] || 0);\r\n\r\n    let interval;\r\n\r\n    interval = setInterval(() => {\r\n      setTimer((prevTimer) => prevTimer + 1);\r\n    }, 1000);\r\n\r\n    // Clear the interval when the component unmounts or when the user moves to the next question\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [currentQuestionIndex, timers]);\r\n\r\n  const [opensubject_1, setOpensubject_1] = useState(true);\r\n  const [opensubject_2, setOpensubject_2] = useState(false);\r\n  const [opensubject_3, setOpensubject_3] = useState(false);\r\n\r\n  const openAlertSubject1 = () => {\r\n    setOpensubject_1(true);\r\n    setOpensubject_2(false);\r\n    setOpensubject_3(false);\r\n  };\r\n  const openAlertSubject2 = () => {\r\n    setOpensubject_2(true);\r\n    setOpensubject_1(false);\r\n    setOpensubject_3(false);\r\n  };\r\n  const openAlertSubject3 = () => {\r\n    setOpensubject_3(true);\r\n    setOpensubject_2(false);\r\n    setOpensubject_1(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"subjects\">\r\n        <button className=\"subject-btn\" onClick={openAlertSubject1}>\r\n          Mathematics\r\n        </button>\r\n        <button className=\"subject-btn\" onClick={openAlertSubject2}>\r\n          Physics\r\n        </button>\r\n        <button className=\"subject-btn\" onClick={openAlertSubject3}>\r\n          Chemistry\r\n        </button>\r\n      </div>\r\n      <div className=\"second-header\">\r\n        <div className=\"single-select-question\">Single Select Question</div>\r\n        <div className=\"right-header\">\r\n          <div className=\"marks\">\r\n            Marks: <div className=\"plus-mark\">+1</div>\r\n            <div className=\"minus-mark\">-1</div>\r\n          </div>\r\n          <div>Timer: {formatTime(timer)}</div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n\r\n      <h2 className=\"question\">\r\n                {Qimages && Qimages.length > 0 && Qimages[activeQuestion] ? (\r\n                  <div>\r\n                    <img\r\n                      src={`data:image/png;base64,${Qimages[activeQuestion].image_data}`}\r\n                      alt={`QImage ${activeQuestion + 1}`}\r\n                    />\r\n                    <ul className=\"options-container\">\r\n                      {OPTimages.slice(\r\n                        activeQuestion * 4,\r\n                        activeQuestion * 4 + 4\r\n                      ).map((optImage, optIndex) => (\r\n                        <li key={optIndex}>\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"index\"\r\n                            checked={\r\n                              selectedAnswers[activeQuestion] ===\r\n                              String.fromCharCode(65 + optIndex)\r\n                            }\r\n                            onChange={() =>\r\n                              onAnswerSelected(\r\n                                String.fromCharCode(65 + optIndex)\r\n                              )\r\n                            }\r\n                          />\r\n                          <label className=\"alpha-index\">\r\n                            \r\n                            <img\r\n                              src={`data:image/png;base64,${optImage.image_data}`}\r\n                              alt={`OPTImage ${optIndex + 2}-${optIndex + 5}`}\r\n                            />\r\n                          </label>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"loading-gif\">\r\n                    <DotSpinner size={90} speed={0.9} color=\"black\" />\r\n                  </div>\r\n                )}\r\n              </h2>\r\n        {/* {questionData.map((question, index) => (\r\n          <div key={index}>\r\n            <h2>Question {index + 1}</h2>\r\n            <img src={question.questionImage} alt={`Question ${index + 1}`} />\r\n\r\n            <h3>Option Images</h3>\r\n            {question.optionImages.map((image, optionIndex) => (\r\n              <img\r\n                key={optionIndex}\r\n                src={image}\r\n                alt={`Option ${optionIndex + 1}`}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))} */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paper1;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}