{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/egate_Quiz_project/src/Pages/MainQuizFunctionality/ButtonsFunctionality.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"../RightSidebar/RightSidebar.css\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttons = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\nconst ButtonsFunctionality = ({\n  onQuestionSelect,\n  questionStatus,\n  seconds,\n  setQuestionStatus,\n  answeredCount,\n  notAnsweredCount,\n  answeredmarkedForReviewCount,\n  markedForReviewCount,\n  VisitedCount\n}) => {\n  _s();\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [answeredQuestions, setAnsweredQuestions] = useState([]);\n  const [isPaused, setIsPaused] = useState(false);\n  const handleButtonClick = questionNumber => {\n    onQuestionSelect(questionNumber);\n    setAnsweredQuestions([...answeredQuestions, questionNumber]);\n    setIsPaused(false);\n    const isVisitedButNotAnswered = questionStatus[questionNumber - 1] === \"notVisited\";\n    if (isVisitedButNotAnswered) {\n      // Mark the question as \"not answered\"\n      const updatedQuestionStatus = [...questionStatus];\n      updatedQuestionStatus[questionNumber - 1] = \"notAnswered\";\n      setQuestionStatus(updatedQuestionStatus);\n    } else if (questionStatus[questionNumber - 1] === \"marked\") {\n      // Mark the question as \"Marked for review\" by default if not visited\n      const updatedQuestionStatus = [...questionStatus];\n      updatedQuestionStatus[questionNumber - 1] = \"markedForReview\";\n      setQuestionStatus(updatedQuestionStatus);\n    }\n  };\n  ButtonsFunctionality.propTypes = {\n    onQuestionSelect: PropTypes.func.isRequired,\n    questionStatus: PropTypes.arrayOf(PropTypes.string),\n    onResumeTimer: PropTypes.func.isRequired // Define the prop type for onResumeTimer\n  };\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [timers, setTimers] = useState(new Array().fill(0));\n  const [timer, setTimer] = useState(0);\n  useEffect(() => {\n    // Set the timer to the saved value for the current question\n    setTimer(timers[currentQuestionIndex] || 0);\n    let interval;\n    // interval = setInterval(() => {\n    //     setTimer(prevTimer => prevTimer + 1);\n    // }, 1000);\n\n    if (!isPaused) {\n      interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer + 1);\n      }, 1000);\n    }\n\n    // Clear the interval when the component unmounts or when the user moves to the next question\n    return () => {\n      clearInterval(interval);\n    };\n  }, [currentQuestionIndex, timers, isPaused]);\n  const visted = () => {\n    setQuestionStatus(Array(1).fill(\"Visited\"));\n  };\n  const renderList = buttons.map((item, index) => {\n    let className = \"quesAns-btn \";\n    if (questionStatus && questionStatus[index] === \"answered\") {\n      className += \" instruction-btn1\";\n    } else if (questionStatus && questionStatus[index] === \"notAnswered\") {\n      className += \" instruction-btn2\";\n    } else if (questionStatus && questionStatus[index] === \"marked\") {\n      className += \" instruction-btn3\";\n    } else if (questionStatus && questionStatus[index] === \"Answered but marked for review\") {\n      className += \" instruction-btn4\";\n    } else if (questionStatus && questionStatus[index] === \"Visited\") {\n      className += \" instruction-btn6\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: className,\n        onClick: () => handleButtonClick(item),\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  });\n  const totalTime = 180 * 60; // 180 minutes in seconds\n  const [wtimer, setWTimer] = useState(totalTime);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setWTimer(prevTimer => prevTimer - 1);\n    }, 1000);\n\n    // Clear the interval and handle time-up logic when timer reaches 0\n    if (wtimer <= 0) {\n      clearInterval(interval);\n      // Handle time-up logic here (e.g., navigate to a different component)\n    }\n\n    // Clean up the interval on component unmount or when navigating away\n    return () => {\n      clearInterval(interval);\n    };\n  }, [wtimer]);\n  const WformatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const remainingSeconds = seconds % 60;\n    return `${hours > 9 ? hours : \"0\" + hours}:${minutes > 9 ? minutes : \"0\" + minutes}:${remainingSeconds > 9 ? remainingSeconds : \"0\" + remainingSeconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"right-side-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSidebar-topHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name of the person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time Left: \", WformatTime(wtimer)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"header-para\",\n        children: [\"You are viewing \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"subject\",\n          children: \"Mathematics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 27\n        }, this), \" Section Question Palette\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ques-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"btn-ul\",\n        children: renderList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"sidebar-footer-header\",\n        children: \"Legend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inst-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"instruction-btn1\",\n            children: answeredCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Answerd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inst-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"instruction-btn2\",\n            children: notAnsweredCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Not Answered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inst-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"instruction-btn3\",\n            children: answeredmarkedForReviewCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Marked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inst-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"instruction-btn4\",\n            children: markedForReviewCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Answered but marked for review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inst-btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"instruction-btn5\",\n            children: VisitedCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Not Visited\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(ButtonsFunctionality, \"HbHDul4XZJ+mZI41WbsYbZ7gSnY=\");\n_c = ButtonsFunctionality;\nexport default ButtonsFunctionality;\nvar _c;\n$RefreshReg$(_c, \"ButtonsFunctionality\");","map":{"version":3,"names":["React","useEffect","useRef","useState","PropTypes","jsxDEV","_jsxDEV","buttons","ButtonsFunctionality","onQuestionSelect","questionStatus","seconds","setQuestionStatus","answeredCount","notAnsweredCount","answeredmarkedForReviewCount","markedForReviewCount","VisitedCount","_s","activeQuestion","setActiveQuestion","answeredQuestions","setAnsweredQuestions","isPaused","setIsPaused","handleButtonClick","questionNumber","isVisitedButNotAnswered","updatedQuestionStatus","propTypes","func","isRequired","arrayOf","string","onResumeTimer","currentQuestionIndex","setCurrentQuestionIndex","timers","setTimers","Array","fill","timer","setTimer","interval","setInterval","prevTimer","clearInterval","visted","renderList","map","item","index","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","totalTime","wtimer","setWTimer","WformatTime","hours","Math","floor","minutes","remainingSeconds","_c","$RefreshReg$"],"sources":["/home/user/Documents/egate_Quiz_project/src/Pages/MainQuizFunctionality/ButtonsFunctionality.jsx"],"sourcesContent":["\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport \"../RightSidebar/RightSidebar.css\";\n\nimport PropTypes from \"prop-types\";\n\nconst buttons = [\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\n  23, 24, 25, 26, 27, 28, 29, 30,\n];\n\nconst ButtonsFunctionality = ({\n    onQuestionSelect,\n    questionStatus,\n    seconds,\n    setQuestionStatus,\n    answeredCount,\n    notAnsweredCount,\n    answeredmarkedForReviewCount,\n    markedForReviewCount,\n    VisitedCount,\n}) => {\n\n    const [activeQuestion, setActiveQuestion] = useState(0);\n  const [answeredQuestions, setAnsweredQuestions] = useState([]);\n  const [isPaused, setIsPaused] = useState(false);\n\n\n  const handleButtonClick = (questionNumber) => {\n    onQuestionSelect(questionNumber);\n    setAnsweredQuestions([...answeredQuestions, questionNumber]);\n    setIsPaused(false);\n\n    const isVisitedButNotAnswered =\n      questionStatus[questionNumber - 1] === \"notVisited\";\n    if (isVisitedButNotAnswered) {\n      // Mark the question as \"not answered\"\n      const updatedQuestionStatus = [...questionStatus];\n      updatedQuestionStatus[questionNumber - 1] = \"notAnswered\";\n      setQuestionStatus(updatedQuestionStatus);\n    } else if (questionStatus[questionNumber - 1] === \"marked\") {\n      // Mark the question as \"Marked for review\" by default if not visited\n      const updatedQuestionStatus = [...questionStatus];\n      updatedQuestionStatus[questionNumber - 1] = \"markedForReview\";\n      setQuestionStatus(updatedQuestionStatus);\n    }\n  };\n\n  ButtonsFunctionality.propTypes = {\n    onQuestionSelect: PropTypes.func.isRequired,\n    questionStatus: PropTypes.arrayOf(PropTypes.string),\n    onResumeTimer: PropTypes.func.isRequired, // Define the prop type for onResumeTimer\n  };\n\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [timers, setTimers] = useState(new Array().fill(0));\n  const [timer, setTimer] = useState(0);\n\n  useEffect(() => {\n    // Set the timer to the saved value for the current question\n    setTimer(timers[currentQuestionIndex] || 0);\n\n    let interval;\n    // interval = setInterval(() => {\n    //     setTimer(prevTimer => prevTimer + 1);\n    // }, 1000);\n\n    if (!isPaused) {\n      interval = setInterval(() => {\n        setTimer((prevTimer) => prevTimer + 1);\n      }, 1000);\n    }\n\n    // Clear the interval when the component unmounts or when the user moves to the next question\n    return () => {\n      clearInterval(interval);\n    };\n  }, [currentQuestionIndex, timers, isPaused]);\n\n  const visted = () => {\n    setQuestionStatus(Array(1).fill(\"Visited\"));\n  };\n  const renderList = buttons.map((item, index) => {\n    let className = \"quesAns-btn \";\n    if (questionStatus && questionStatus[index] === \"answered\") {\n      className += \" instruction-btn1\";\n    } else if (questionStatus && questionStatus[index] === \"notAnswered\") {\n      className += \" instruction-btn2\";\n    } else if (questionStatus && questionStatus[index] === \"marked\") {\n      className += \" instruction-btn3\";\n    } else if (\n      questionStatus &&\n      questionStatus[index] === \"Answered but marked for review\"\n    ) {\n      className += \" instruction-btn4\";\n    } else if (questionStatus && questionStatus[index] === \"Visited\") {\n      className += \" instruction-btn6\";\n    }\n    return (\n      <div key={item}>\n        <button className={className} onClick={() => handleButtonClick(item)}>\n          {item}\n        </button>\n      </div>\n    );\n  });\n\n\n  const totalTime = 180 * 60; // 180 minutes in seconds\n  const [wtimer, setWTimer] = useState(totalTime);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setWTimer((prevTimer) => prevTimer - 1);\n    }, 1000);\n\n    // Clear the interval and handle time-up logic when timer reaches 0\n    if (wtimer <= 0) {\n      clearInterval(interval);\n      // Handle time-up logic here (e.g., navigate to a different component)\n    }\n\n    // Clean up the interval on component unmount or when navigating away\n    return () => {\n      clearInterval(interval);\n    };\n  }, [wtimer]);\n\n\n  const WformatTime = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const remainingSeconds = seconds % 60;\n    return `${hours > 9 ? hours : \"0\" + hours}:${\n      minutes > 9 ? minutes : \"0\" + minutes\n    }:${remainingSeconds > 9 ? remainingSeconds : \"0\" + remainingSeconds}`;\n  };\n\n\n  \n\n\n\n  return (\n    <div className=\"right-side-bar\">\n      <div className=\"rightSidebar-topHeader\">\n        <p>Name of the person</p>\n        <p>Time Left: {WformatTime(wtimer)}</p>\n      </div>\n      <div className=\"sidebar-header\">\n        <p className=\"header-para\">\n          You are viewing <span className=\"subject\">Mathematics</span> Section\n          Question Palette\n        </p>\n      </div>\n\n      <div className=\"ques-btn\">\n        <ul className=\"btn-ul\">{renderList}</ul>\n      </div>\n\n      {/* <div key={index}>\n                <button className='quesAns-btn'>{item}</button>\n            </div> */}\n\n      <div className=\"sidebar-footer\">\n        <h4 className=\"sidebar-footer-header\">Legend</h4>\n        <div className=\"footer-btns\">\n          <div className=\"inst-btns\">\n            <button className=\"instruction-btn1\">{answeredCount}</button>\n            <p>Answerd</p>\n            <br />\n          </div>\n          <br />\n          <div className=\"inst-btns\">\n            <button className=\"instruction-btn2\">{notAnsweredCount}</button>\n            <p>Not Answered</p>\n            <br />\n          </div>\n          <br />\n          <div className=\"inst-btns\">\n            <button className=\"instruction-btn3\">\n              {answeredmarkedForReviewCount}\n            </button>\n            <p>Marked</p>\n            <br />\n          </div>\n          <br />\n          <div className=\"inst-btns\">\n            <button className=\"instruction-btn4\">{markedForReviewCount}</button>\n            <p>Answered but marked for review</p>\n          </div>\n          <br />\n          <div className=\"inst-btns\">\n            <button className=\"instruction-btn5\">{VisitedCount}</button>\n            <p>Not Visited</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ButtonsFunctionality;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}