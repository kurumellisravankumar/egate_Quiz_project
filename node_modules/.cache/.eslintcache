[{"D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\index.js":"1","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\App.js":"2","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Pages\\SubjectTest\\SubjectTest.jsx":"3","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Pages\\ChapterTest\\ChapterTest.jsx":"4","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Pages\\Paper\\Paper.jsx":"5","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Pages\\PreviousTest\\PreviousTest.jsx":"6","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Pages\\FullTest\\FullTest.jsx":"7","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Pages\\Instructions\\Instructions.jsx":"8","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Pages\\Home\\Home.jsx":"9","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Pages\\General_intructions_page\\General_intructions_page.jsx":"10","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Data\\Introduction_page_DATA.js":"11","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Components\\HomeHeader\\HomeHeader.jsx":"12","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Components\\PaperHeader\\PaperHeader.jsx":"13","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Components\\RightSidebar\\RightSidebar.jsx":"14","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Components\\LeftSidebar\\LeftSidebar.jsx":"15"},{"size":269,"mtime":1698386043642,"results":"16","hashOfConfig":"17"},{"size":1363,"mtime":1698407632520,"results":"18","hashOfConfig":"17"},{"size":22240,"mtime":1698407387978,"results":"19","hashOfConfig":"17"},{"size":2439,"mtime":1698386043623,"results":"20","hashOfConfig":"17"},{"size":76859,"mtime":1698408100838,"results":"21","hashOfConfig":"17"},{"size":2441,"mtime":1698386043641,"results":"22","hashOfConfig":"17"},{"size":2535,"mtime":1698386043637,"results":"23","hashOfConfig":"17"},{"size":13590,"mtime":1698386043638,"results":"24","hashOfConfig":"17"},{"size":264,"mtime":1698386043638,"results":"25","hashOfConfig":"17"},{"size":7151,"mtime":1698386043637,"results":"26","hashOfConfig":"17"},{"size":5740,"mtime":1698386043623,"results":"27","hashOfConfig":"17"},{"size":1332,"mtime":1698386043623,"results":"28","hashOfConfig":"17"},{"size":317,"mtime":1698386043623,"results":"29","hashOfConfig":"17"},{"size":10892,"mtime":1698407632520,"results":"30","hashOfConfig":"17"},{"size":2228,"mtime":1698386043623,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"fqan74",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"35"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\index.js",[],[],["83"],"D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\App.js",["84"],[],"import { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport Home from './Pages/Home/Home'\r\nimport Paper from './Pages/Paper/Paper'\r\nimport SubjectTest from './Pages/SubjectTest/SubjectTest'\r\nimport FullTest from './Pages/FullTest/FullTest'\r\nimport ChapterTest from './Pages/ChapterTest/ChapterTest'\r\nimport PreviousTest from './Pages/PreviousTest/PreviousTest'\r\nimport Instructions from './Pages/Instructions/Instructions';\r\nimport General_intructions_page from './Pages/General_intructions_page/General_intructions_page'\r\n// import Result from './Pages/Paper/Result';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n    {/* <Instructions/> */}\r\n       <Routes>\r\n          <Route path='/' element={<Home/>}/>\r\n        <Route path='/Paper' element={<Paper />} />\r\n        <Route path='/SubjectTest' element={<SubjectTest/>} />\r\n        <Route path='/FullTest' element={<FullTest />} />\r\n        <Route path='/ChapterTest' element={<ChapterTest />} />\r\n        <Route path='/PreviousTest' element={<PreviousTest />} />\r\n        <Route path='/Instructions' element={<Instructions />} />\r\n        <Route path='/General_intructions_page' element={<General_intructions_page/>}/>\r\n        {/* <Route path='/result' element={<Result/>}/> */}\r\n\r\n        \r\n       </Routes>\r\n    </BrowserRouter>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Pages\\SubjectTest\\SubjectTest.jsx",["85","86","87"],[],"// import React, { useEffect, useRef, useState } from 'react';\r\n// import './SubjectTest.css'\r\n// import { useNavigate } from 'react-router-dom'\r\n// import HomeHeader from '../../Components/HomeHeader/HomeHeader';\r\n\r\n// const SubjectTest = ({ seconds }) => {\r\n\r\n//     const [countdown, setCountdown] = useState(seconds);\r\n//     const timerId = useRef();\r\n\r\n//     useEffect(() => {\r\n//         if (countdown <= 0) {\r\n//             clearInterval(timerId.current);\r\n//             alert(\"End\");\r\n//         }\r\n//     }, [countdown]);\r\n//     const navigate = useNavigate();\r\n//     const startCountdown = () => {\r\n//         timerId.current = setInterval(() => {\r\n//             setCountdown((prev) => prev - 1);\r\n//         }, 1000);\r\n//         navigate('/Paper');\r\n\r\n//     };\r\n\r\n//     const myComponentStyle1 = {\r\n//         color: 'white'\r\n//     }\r\n//     const myComponentStyle2 = {\r\n//         color: 'white'\r\n//     }\r\n//     return (\r\n//         <div className='home-main-page'>\r\n//             <div>\r\n//                 <HomeHeader />\r\n//             </div>\r\n//             <div className='test-card'>\r\n//                 <div className='test-card-header'>\r\n//                     <div className='test-contents1'><h3 className='jee-test-1'>JEE MAIN 2024 TEST-1</h3><span style={myComponentStyle2} class=\"material-symbols-outlined\">\r\n//                         lock_open\r\n//                     </span></div>\r\n//                     <p className='testCard-second-header'>Available Till: 31 May,2024</p>\r\n//                     <p className='free-title'>FREE</p>\r\n//                 </div>\r\n//                 <div>\r\n//                     <div className='test-contents2'><span style={myComponentStyle1} class=\"material-symbols-outlined\">help</span><p>90 Questions</p></div>\r\n\r\n//                     <div className='test-contents2'><span style={myComponentStyle1} class=\"material-symbols-outlined\">\r\n//                         schedule\r\n//                     </span><p>180 Minutes</p></div>\r\n\r\n//                     <div className='test-contents2'><span style={myComponentStyle1} class=\"material-symbols-outlined\">\r\n//                         trending_up\r\n//                     </span><p>300 Marks</p></div>\r\n\r\n//                     <div className='test-btn'><button onClick={startCountdown} className='play-btn'><span class=\"material-symbols-outlined\">\r\n//                         chevron_right\r\n//                     </span>Start Test</button></div>\r\n\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default SubjectTest\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./SubjectTest.css\";\r\nimport { Link, NavLink } from \"react-router-dom\"; //useNavigate,\r\nimport logo from \"../../Images/logo.jpg\";\r\nimport LeftSidebar from \"../../Components/LeftSidebar/LeftSidebar\";\r\nimport Instructions from \"../Instructions/Instructions\";\r\nimport PhoneInput from \"react-phone-number-input\";\r\nimport \"react-phone-number-input/style.css\";\r\nconst SubjectTest = () => {\r\n  //{ seconds }\r\n\r\n  // const [countdown, setCountdown] = useState(seconds);\r\n  // const timerId = useRef();\r\n\r\n  // useEffect(() => {\r\n  //     if (countdown <= 0) {\r\n  //         clearInterval(timerId.current);\r\n  //         alert(\"End\");\r\n  //     }\r\n  // }, [countdown]);\r\n  // const navigate = useNavigate();\r\n  // const startCountdown = () => {\r\n  //     timerId.current = setInterval(() => {\r\n  //         setCountdown((prev) => prev - 1);\r\n  //     }, 1000);\r\n  //     navigate('/Paper');\r\n  // };\r\n\r\n  const myComponentStyle1 = {\r\n    // color: 'white'\r\n  };\r\n  const myComponentStyle2 = {\r\n    // color: 'white'\r\n  };\r\n  // const [showAlert1, setShowAlert1] = useState(false);\r\n  // const [showAlert2, setShowAlert2] = useState(false);\r\n\r\n  // const openAlert1 = () => {\r\n  //     setShowAlert1(true);\r\n  // };\r\n\r\n  // const closeAlert1 = () => {\r\n  //     setShowAlert1(false);\r\n  // };\r\n\r\n  // const openAlert2 = () => {\r\n  //     setShowAlert2(true);\r\n  // };\r\n\r\n  // const closeAlert2 = () => {\r\n  //     setShowAlert2(false);\r\n  // };\r\n\r\n  // const countries = [\r\n  //     { id: \"1\", name: \"INDIA\" },\r\n  //     { id: \"2\", name: \"USA\" },\r\n  //     { id: \"3\", name: \"GERMANY\" },\r\n  //     { id: \"4\", name: \"KOREA\" },\r\n  //     { id: \"5\", name: \"AFRICA\" },\r\n  // ];\r\n\r\n  // const states = [\r\n  //     { id: \"1\", countryId: \"1\", name: \"Haryana\" },\r\n  //     { id: \"2\", countryId: \"1\", name: \"Delhi\" },\r\n  //     { id: \"3\", countryId: \"1\", name: \"Telangana\" },\r\n  //     { id: \"4\", countryId: \"1\", name: \"Andhra Pradesh\" },\r\n  //     { id: \"5\", countryId: \"2\", name: \"Texas\" },\r\n  //     { id: \"6\", countryId: \"2\", name: \"California\" },\r\n  // ];\r\n\r\n  // const cities = [\r\n  //     { id: \"1\", stateId: \"1\", name: \"Faridabad\" },\r\n  //     { id: \"2\", stateId: \"1\", name: \"Palwal\" },\r\n  //     { id: \"3\", stateId: \"2\", name: \"Mandi House\" },\r\n  //     { id: \"4\", stateId: \"2\", name: \"kalka Ji\" },\r\n  //     { id: \"5\", stateId: \"3\", name: \"Hyderabad\" },\r\n  //     { id: \"6\", stateId: \"3\", name: \"Gachibowli\" },\r\n\r\n  //     { id: \"1\", stateId: \"5\", name: \"Houston\" },\r\n  //     { id: \"2\", stateId: \"5\", name: \"Austin\" },\r\n  //     { id: \"3\", stateId: \"6\", name: \"Los Angeles\" },\r\n  //     { id: \"4\", stateId: \"6\", name: \"Son Diego\" },\r\n  //     { id: \"5\", stateId: \"4\", name: \"Vijyawada\" },\r\n  //     { id: \"6\", stateId: \"4\", name: \"Thirupati\" },\r\n  // ];\r\n\r\n  // const [country, setCountry] = useState([]);\r\n  // const [state, setState] = useState([]);\r\n  // const [city, setCity] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //     setCountry(countries);\r\n  // }, []);\r\n\r\n  // const handleCountry = (id) => {\r\n  //     const dt = states.filter((x) => x.countryId === id);\r\n  //     setState(dt);\r\n  // };\r\n\r\n  // const handleState = (id) => {\r\n  //     const dt = cities.filter((x) => x.stateId === id);\r\n  //     setCity(dt);\r\n  // };\r\n\r\n  // const [value, setValue] = useState();\r\n\r\n  // var User = null;\r\n\r\n  // const [isOpen1, setIsOpen1] = useState(false);\r\n  // const [isOpen2, setIsOpen2] = useState(false);\r\n  return (\r\n    <div className=\"main_conatiner\">\r\n      {/*******************starting code NAVBAR CONTENT ****************/}\r\n      <div>\r\n        <div className=\"navbar-div\">\r\n          <img src={logo} alt=\"logo\" width=\"250px\" />\r\n\r\n          <div className=\"auth-btn\">\r\n            <div className=\"Login_logOUT\">\r\n              {/* {!User ? ( */}\r\n              {/* <div >\r\n                                    <div><button onClick={openAlert1}>LOGIN</button>\r\n                                        <button onClick={openAlert2}>SIGNUP</button></div>\r\n\r\n\r\n                                </div> */}\r\n              {/* // ) : ( */}\r\n              {/* <>\r\n                                    <button onClick={() => setIsOpen1(!isOpen1)}>{User}</button>\r\n                                    {isOpen1 && (\r\n                                        <div>\r\n                                            <div>\r\n                                                <p>Profile</p>\r\n                                                <p>Log Out</p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    )}\r\n                                    <div>\r\n                                        <button onClick={() => setIsOpen2(!isOpen2)}>Courses</button>\r\n                                        {isOpen2 && (\r\n                                            <div>\r\n                                                <p>IIT</p>\r\n                                                <p>JEE</p>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </> */}\r\n              {/* )} */}\r\n            </div>\r\n            {/* <div>\r\n              {\r\n                User = null ?<div><button onClick={openAlert1}>LOGIN</button> \r\n                  <button onClick={openAlert2}>SIGNUP</button></div>: \r\n                <>\r\n                  <button onClick={() => setIsOpen1(!isOpen1)}>{User}</button>\r\n                  {isOpen1 && (\r\n                    <div>\r\n                      <p>Profile</p>\r\n                      <p>Log Out</p>\r\n                    </div>\r\n                  )}\r\n                  <div>\r\n                      <button onClick={() => setIsOpen2(!isOpen2)}>Courses</button>\r\n                      {isOpen2 && (\r\n                        <div>\r\n                          <p>Profile</p>\r\n                          <p>Log Out</p>\r\n                        </div>\r\n                      )}\r\n                  </div>\r\n                </>\r\n              }\r\n            </div> */}\r\n            {/* <div><button onClick={openAlert1}>LOGIN</button></div> */}\r\n            {/* <div><button onClick={openAlert2}>SIGNUP</button></div> */}\r\n            {/* {\r\n              dropDown && (\r\n                <div>\r\n                  <button onClick={() => setIsOpen(!isOpen)}>Toggle Dropdown</button>\r\n                  {isOpen && (\r\n                    <div>\r\n                      <p>Profile</p>\r\n                      <p>Log Out</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )\r\n            } */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/*******************end code NAVBAR CONTENT ****************/}\r\n\r\n      {/********************* Show alert 1 start code ****************/}\r\n\r\n      {/* {showAlert1 && (\r\n                <div id=\"divContent1\">\r\n                 \r\n                    <div>\r\n                        <div className=\"login_close_container\">\r\n                            <h4>LOGIN</h4>\r\n                            <p>\r\n                                <span\r\n                                    id=\"close-icon\"\r\n                                    class=\"material-symbols-outlined\"\r\n                                    onClick={closeAlert1}\r\n                                >\r\n                                    close\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                        <form action=\"\" id=\"form\">\r\n                            <p>\r\n                                <h5>Mobile Number or Email :</h5>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter your Mobile Number or Email\"\r\n                                />\r\n                            </p>\r\n                            <p>\r\n                                <h5>Password :</h5>\r\n                                <input type=\"text\" placeholder=\"Enter your Password\" />\r\n                            </p>\r\n                            <p>\r\n                                <Link>Forgot Password?</Link>\r\n                            </p>\r\n                        </form>\r\n                        <div>\r\n                            <button>Submit</button>\r\n                            <button onClick={openAlert2}>Don't Have Account? SIGNUP</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )} */}\r\n\r\n      {/********************* Show alert 1 end code ****************/}\r\n\r\n      {/********************* Show alert 2 start code ****************/}\r\n      {/* {showAlert2 && (\r\n                <div id='divContent2'>\r\n\r\n                    <div>\r\n                        <div className='login_close_container'><h4>SIGNUP</h4><p><span id='close-icon' class=\"material-symbols-outlined\" onClick={closeAlert2}>\r\n                            close\r\n                        </span></p></div>\r\n                        ***************** form start code ******************\r\n                        <form action=\"\" id='form'>\r\n                            <p>\r\n                                <h5>Name :</h5>\r\n                                <input type=\"text\" placeholder=\"Enter your Name\" />\r\n                            </p>\r\n                            <p>\r\n                                <h5>Email Address :</h5>\r\n                                <input type=\"text\" placeholder=\"Enter your Email Address\" />\r\n                            </p>\r\n                            <p>\r\n                                <PhoneInput\r\n                                    placeholder=\"Enter phone number\"\r\n                                    value={value}\r\n                                    onChange={setValue} />\r\n                            </p>\r\n                            <p>\r\n                                <h5>Password :</h5>\r\n                                <input type=\"password\" placeholder=\"Enter your password\" />\r\n                            </p>\r\n                            <p><select id=\"ddlCountry\" className='form-control select-class' onChange={(e) => handleCountry(e.target.value)}>\r\n                                <option value=\"0\">Select Country</option>\r\n                                {\r\n                                    country &&\r\n                                        country !== undefined ?\r\n                                        country.map((ctr, index) => {\r\n                                            return (\r\n                                                <option key={index} value={ctr.id}>{ctr.name}</option>\r\n                                            )\r\n                                        })\r\n                                        : \"No Country\"\r\n\r\n                                }\r\n                            </select>\r\n                            </p>\r\n                            <br></br>\r\n                            <p><select id=\"ddlStates\" className='form-control select-class' onChange={(e) => handleState(e.target.value)}>\r\n                                <option value=\"0\">Select State</option>\r\n                                {\r\n                                    state &&\r\n                                        state !== undefined ?\r\n                                        state.map((ctr, index) => {\r\n                                            return (\r\n                                                <option key={index} value={ctr.id}>{ctr.name}</option>\r\n                                            )\r\n                                        })\r\n                                        : \"No State\"\r\n\r\n                                }\r\n                            </select>\r\n                            </p>\r\n                            <br></br>\r\n                            <p><select id=\"ddlCity\" className='form-control select-class'>\r\n                                <option value=\"0\">Select City</option>\r\n                                {\r\n                                    city &&\r\n                                        city !== undefined ?\r\n                                        city.map((ctr, index) => {\r\n                                            return (\r\n                                                <option key={index} value={ctr.id}>{ctr.name}</option>\r\n                                            )\r\n                                        })\r\n                                        : \"No City\"\r\n\r\n                                }\r\n                            </select>\r\n                            </p>\r\n                        </form>\r\n                        ***************** form end code ******************\r\n\r\n                        <div>\r\n                            <button>Submit</button>\r\n                            <button>Login</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            )} */}\r\n      {/********************* Show alert 2 end code ****************/}\r\n\r\n      <div className=\"ls-bar-exam-page\">\r\n        {/****************** LeftSidebar Component render *******************/}\r\n        <div>\r\n          <LeftSidebar />\r\n        </div>\r\n\r\n        {/********************starting code Exam page Header  *****************/}\r\n        <div className=\"exam-middle-div\">\r\n          <div>\r\n            <h3 className=\"exam-heading\">JEE MAIN Full Test</h3>\r\n          </div>\r\n          <div className=\"home-main-page\">\r\n            {/* <h2>JEE MAIN Full Test</h2> */}\r\n            <div>\r\n              <div>\r\n                <div className=\"header-div1\">\r\n                  <p className=\"div-heading\">Online Test for JEE Main</p>\r\n                </div>\r\n                <div className=\"header-div2\">\r\n                  <div className=\"header-links\">\r\n                    <NavLink activeclassname=\"active\" className=\"content-link\">\r\n                      Full Test\r\n                    </NavLink>\r\n                    <NavLink activeclassname=\"active\" className=\"content-link\">\r\n                      Subject Test\r\n                    </NavLink>\r\n                    <NavLink activeclassname=\"active\" className=\"content-link\">\r\n                      Chapter Test\r\n                    </NavLink>\r\n                    <NavLink activeclassname=\"active\" className=\"content-link\">\r\n                      Previous Years{\" \"}\r\n                    </NavLink>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/********************end code Exam page Header  *****************/}\r\n\r\n            {/********************starting testcard code  *****************/}\r\n            <div className=\"test-card\">\r\n              <div className=\"test-card-header\">\r\n                <div className=\"test-contents1\">\r\n                  <h3 className=\"jee-test-1\">JEE MAIN 2024 TEST-1</h3>\r\n                  <span\r\n                    style={myComponentStyle2}\r\n                    class=\"material-symbols-outlined\"\r\n                  >\r\n                    lock_open\r\n                  </span>\r\n                </div>\r\n                <p className=\"testCard-second-header\">\r\n                  Available Till: 31 May,2024\r\n                </p>\r\n                <p className=\"free-title\">FREE</p>\r\n              </div>\r\n              <div>\r\n                <div className=\"test-contents2\">\r\n                  <span\r\n                    style={myComponentStyle1}\r\n                    class=\"material-symbols-outlined\"\r\n                  >\r\n                    help\r\n                  </span>\r\n                  <p>90 Questions</p>\r\n                </div>\r\n\r\n                <div className=\"test-contents2\">\r\n                  <span\r\n                    style={myComponentStyle1}\r\n                    class=\"material-symbols-outlined\"\r\n                  >\r\n                    schedule\r\n                  </span>\r\n                  <p>180 Minutes</p>\r\n                </div>\r\n\r\n                <div className=\"test-contents2\">\r\n                  <span\r\n                    style={myComponentStyle1}\r\n                    class=\"material-symbols-outlined\"\r\n                  >\r\n                    trending_up\r\n                  </span>\r\n                  <p>300 Marks</p>\r\n                </div>\r\n\r\n                {/* <div className='test-btn'><button onClick={startCountdown} className='play-btn'><span class=\"material-symbols-outlined\">\r\n                        chevron_right\r\n                    </span>Start Test</button></div> */}\r\n                {/* <div className=\"test-btn\">\r\n                                    <button className=\"play-btn\" onClick={openAlert1}>\r\n                                        <span class=\"material-symbols-outlined\">chevron_right</span>\r\n                                        Start Test\r\n                                    </button>\r\n\r\n                                    \r\n                                    element={<Instructions />}\r\n                                </div> */}\r\n                <div className=\"test-btn\">\r\n                  <Link\r\n                    className=\"play-btn\"\r\n                    to=\"/Instructions\"\r\n                    element={<Instructions />}\r\n                  >\r\n                    <span class=\"material-symbols-outlined\">chevron_right</span>\r\n                    Start Test\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/********************end testcard code  *****************/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/*       \r\n      {\r\n        afterlogin_dashboard &&\r\n        <div className=\"dashboard\" id=\"dashboard\">\r\n\r\n        </div>\r\n      } */}\r\n    </div>\r\n    // <div className='home-main-page'>\r\n    //     <div>\r\n    //         <HomeHeader />\r\n    //     </div>\r\n    //     <div className='test-card'>\r\n    //         <div className='test-card-header'>\r\n    //             <div className='test-contents1'><h3 className='jee-test-1'>JEE MAIN 2024 TEST-1</h3><span style={myComponentStyle2} class=\"material-symbols-outlined\">\r\n    //                 lock_open\r\n    //             </span></div>\r\n    //             <p className='testCard-second-header'>Available Till: 31 May,2024</p>\r\n    //             <p className='free-title'>FREE</p>\r\n    //         </div>\r\n    //         <div>\r\n    //             <div className='test-contents2'><span style={myComponentStyle1} class=\"material-symbols-outlined\">help</span><p>90 Questions</p></div>\r\n\r\n    //             <div className='test-contents2'><span style={myComponentStyle1} class=\"material-symbols-outlined\">\r\n    //                 schedule\r\n    //             </span><p>180 Minutes</p></div>\r\n\r\n    //             <div className='test-contents2'><span style={myComponentStyle1} class=\"material-symbols-outlined\">\r\n    //                 trending_up\r\n    //             </span><p>300 Marks</p></div>\r\n\r\n    //             {/* <div className='test-btn'><button onClick={startCountdown} className='play-btn'><span class=\"material-symbols-outlined\">\r\n    //                 chevron_right\r\n    //             </span>Start Test</button></div> */}\r\n    //             <div className='test-btn'>\r\n    //                 <Link className='play-btn' to='/Instructions' element={<Instructions />}><span class=\"material-symbols-outlined\">\r\n    //                     chevron_right\r\n    //                 </span>Start Test</Link>\r\n    //             </div>\r\n\r\n    //         </div>\r\n    //     </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default SubjectTest;\r\n","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Pages\\ChapterTest\\ChapterTest.jsx",[],[],"D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Pages\\Paper\\Paper.jsx",["88","89","90","91","92","93","94","95"],[],"D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Pages\\PreviousTest\\PreviousTest.jsx",[],[],"D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Pages\\FullTest\\FullTest.jsx",[],[],"D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Pages\\Instructions\\Instructions.jsx",["96"],[],"// // import React from 'react'\r\n// import React, { useEffect, useRef, useState } from 'react';\r\n// import './Instructions.scss'\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const Instructions = ({ seconds }) => {\r\n\r\n//     const [countdown, setCountdown] = useState(seconds);\r\n//     const timerId = useRef();\r\n\r\n//     useEffect(() => {\r\n//         if (countdown <= 0) {\r\n//             clearInterval(timerId.current);\r\n//             alert(\"End\");\r\n//         }\r\n//     }, [countdown]);\r\n//     const navigate = useNavigate();\r\n//     const startCountdown = () => {\r\n//         timerId.current = setInterval(() => {\r\n//             setCountdown((prev) => prev - 1);\r\n//         }, 1000);\r\n//         navigate('/Paper');\r\n//     };\r\n\r\n\r\n\r\n//     return (\r\n//         <div>\r\n//             <div id=\"ins1Text\" className=\"contentClass\">\r\n//                 <div className=\"insDiv\">\r\n\r\n//                     <p align=\"center\">\r\n//                         <strong>Please read the following instructions carefully.</strong>\r\n//                     </p>\r\n\r\n//                     <p>\r\n//                         <strong>General Instructions:</strong>\r\n//                     </p>\r\n\r\n//                     <p>\r\n//                         &nbsp;&nbsp;&nbsp;&nbsp;1. Total time available for this test will be displayed on the next. <br />\r\n//                         &nbsp;&nbsp;&nbsp;&nbsp;2. The clock has been set at the server and the countdown timer at the top right corner of your screen will display the time remaining for you to complete the exam. When the clock runs out the exam ends by default - you are not required to end or submit your. <br />\r\n//                         &nbsp;&nbsp;&nbsp;&nbsp;3. The question palette at the right of screen shows one of the following statuses of each of the questions numbered: <br />\r\n//                     </p>\r\n\r\n//                     <p>&nbsp;</p>\r\n\r\n//                     <div>&nbsp;</div>\r\n\r\n//                     <div>\r\n//                         <div className=\"grayDiv\">1.</div>\r\n//                         <div >You have not visited the question yet.</div>\r\n//                     </div>\r\n\r\n//                     <div>&nbsp;</div>\r\n//                     <div>&nbsp;</div>\r\n//                     <div>\r\n//                         <div className=\"orangeDiv\">3</div>\r\n//                         <div >You have not answered the question.</div>\r\n//                     </div>\r\n\r\n//                     <div >&nbsp;</div>\r\n//                     <div >&nbsp;</div>\r\n//                     <div >\r\n//                         <div className=\"greenDiv\">5</div>\r\n//                         <div >You have answered the question.</div>\r\n//                     </div>\r\n\r\n//                     <div >&nbsp;</div>\r\n//                     <div >&nbsp;</div>\r\n//                     <div >\r\n//                         <div className=\"purpleDiv\">7</div>\r\n//                         <div >You have NOT answered the question but have marked the question for review.</div>\r\n//                     </div>\r\n\r\n//                     <div>&nbsp;</div>\r\n//                     <div >&nbsp;</div>\r\n//                     <div >\r\n//                         <div className=\"purpleTickDiv\">9</div>\r\n//                         <div>You have answered the question but marked it for review.</div>\r\n//                     </div>\r\n\r\n//                     <div >&nbsp;</div>\r\n//                     <p>&nbsp;</p>\r\n//                     <p>The Marked for Review status simply acts as a reminder that you have set to look at the question again. If an answer is selected for a question that is Marked for Review, the answer will be considered in the final evaluation.</p>\r\n\r\n//                     <p ><strong>Navigating to a question:</strong></p>\r\n\r\n//                     <p>&nbsp;&nbsp;&nbsp;&nbsp;4. To select a question to answer, you can do one of the following: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a. Click on the question number on the question palette at the right of your screen to go to that numbered question directly. Note that using this option does NOT save your answer to the current question.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b. Click on Save and Next to save answer to current question and to go to the next question in sequence. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c. Click on Mark for Review and Next to save answer to current question, mark it for review, and to go to the next question in sequence.</p>\r\n\r\n//                     <p>&nbsp;&nbsp;&nbsp;&nbsp;5. You can view the entire paper by clicking on the <strong>Question Paper</strong> button.</p>\r\n\r\n//                     <p ><strong>Answering questions:</strong></p>\r\n\r\n//                     <p>&nbsp;&nbsp;&nbsp;&nbsp;6. For multiple choice type question :&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a. To select your answer, click on one of the option buttons &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b. To change your answer, click the another desired option button &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c. To save your answer, you MUST click on <strong>Save &amp; Next</strong> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d. To deselect a chosen answer, click on the chosen option again or click on the <strong>Clear Response</strong> button. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e. To mark a question for review click on Mark for Review &amp; Next. If an answer is selected for a question that is Marked for Review, the answer will be considered in the final evaluation.</p>\r\n\r\n//                     <p>&nbsp;&nbsp;&nbsp;&nbsp;7. To change an answer to a question, first select the question and then click on the new answer option followed by a click on the <strong>Save &amp; Next</strong> button.</p>\r\n\r\n//                     <p>&nbsp;&nbsp;&nbsp;&nbsp;8. Questions that are saved or marked for review after answering will ONLY be considered for evaluation.</p>\r\n\r\n//                     <p><strong>Navigating through sections:</strong></p>\r\n\r\n//                     <p>&nbsp;&nbsp;&nbsp;&nbsp;9. Sections in this question paper are displayed on the top bar of the screen. Questions in a section can be viewed by clicking on the section name. The section you are currently viewing is highlighted.</p>\r\n\r\n//                     <p>&nbsp;&nbsp;&nbsp;&nbsp;10. After clicking the Save &amp; Next button on the last question for a section, you will automatically be taken to the first question of the next section.</p>\r\n\r\n//                     <p>&nbsp;&nbsp;&nbsp;&nbsp;11. You can move the mouse cursor over the section names to view the status of the questions for that section.</p>\r\n\r\n//                     <p>&nbsp;&nbsp;&nbsp;&nbsp;12. You can shuffle between sections and questions anytime during the examination as per your convenience.</p>\r\n//                 </div>\r\n//                 <div className='test-btn'>\r\n//                     <button onClick={startCountdown} className='play-btn'>\r\n//                         Next<span class=\"material-symbols-outlined\">\r\n//                             double_arrow\r\n//                         </span>\r\n//                     </button>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n\r\n//     )\r\n// }\r\n\r\n// export default Instructions\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React from \"react\";\r\nimport { AiOutlineArrowRight } from \"react-icons/ai\"\r\nimport { Link } from \"react-router-dom\";\r\nimport './Instructions.scss'\r\n// =============================== nav-data ===============================\r\nimport { Navbar, Intro_content } from \"../../Data/Introduction_page_DATA\";\r\n\r\n// =============================== css ===============================\r\n// import \"./styles/introducationpage.css\";\r\nconst Introduction_page = () => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Intro_container />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Introduction_page;\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <>\r\n            {Navbar.map((nav, index) => {\r\n                return (\r\n                    <div className=\"Quiz_header\" key={index}>\r\n                        <div className=\"Q_logo\">\r\n                            <img src={nav.Q_logo} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"Q_title\">\r\n                            <h1>{nav.Q_page_title}</h1>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\nexport const Intro_container = () => {\r\n    return (\r\n        <>\r\n            {Intro_content.map((Intro_content, index) => {\r\n                return (\r\n\r\n                    <div key={index} className=\"Q_container\">\r\n                        <h2>{Intro_content.Intro_content_text_center}</h2>\r\n                        <h3>{Intro_content.Intro_content_text_subheading_1}</h3>\r\n                        <ol>\r\n                            <li>{Intro_content.Intro_content_points_1}</li>\r\n                            <li>{Intro_content.Intro_content_points_2}</li>\r\n                            <li>{Intro_content.Intro_content_points_3}</li>\r\n                            <div className=\"img_container\">\r\n                                <p>\r\n\r\n                                    <div className=\" intro_img intro_img1\">1</div>{\" \"}\r\n                                    {Intro_content.Intro_content_points_p1}\r\n                                </p>\r\n                                <p>\r\n\r\n                                    <div className=\" intro_img intro_img2\">3</div>\r\n                                    {Intro_content.Intro_content_points_p2}\r\n                                </p>\r\n                                <p>\r\n\r\n                                    <div className=\"  intro_img intro_img3\">5</div>\r\n                                    {Intro_content.Intro_content_points_p3}\r\n                                </p>\r\n                                <p>\r\n\r\n                                    <div className=\" intro_img intro_img4\">7</div>\r\n                                    {Intro_content.Intro_content_points_p4}\r\n                                </p>\r\n                                <p>\r\n\r\n                                    <div className=\" intro_img intro_img5\">9</div>\r\n                                    {Intro_content.Intro_content_points_p5}\r\n                                </p>\r\n                            </div>\r\n                            <p>{Intro_content.Intro_content_points_p}</p>\r\n                            <h3>{Intro_content.Intro_content_text_subheading_2}</h3>\r\n                            <li>\r\n                                {Intro_content.Intro_content_points_4}\r\n\r\n                                <ol>\r\n                                    <li>{Intro_content.Intro_content_points_4_a}</li>\r\n                                    <li>{Intro_content.Intro_content_points_4_b}</li>\r\n                                    <li>{Intro_content.Intro_content_points_4_c}</li>\r\n                                </ol>\r\n                            </li>\r\n\r\n                            <li>\r\n                                {Intro_content.Intro_content_points_5}{\" \"}\r\n                                <span> {Intro_content.span_1}</span>\r\n                                {Intro_content.Intro_content_points_5__}\r\n                            </li>\r\n                            <h3>{Intro_content.Intro_content_text_subheading_3}</h3>\r\n                            <li>\r\n                                {Intro_content.Intro_content_points_6}\r\n                                <ol>\r\n                                    <li>{Intro_content.Intro_content_points_6_a}</li>\r\n                                    <li>{Intro_content.Intro_content_points_6_b}</li>\r\n                                    <li>\r\n                                        {Intro_content.Intro_content_points_6_c}\r\n                                        <span> {Intro_content.span_2}</span>\r\n                                    </li>\r\n                                    <li>\r\n                                        {Intro_content.Intro_content_points_6_d}\r\n                                        <span> {Intro_content.span_3}</span>{\" \"}\r\n                                        {Intro_content.Intro_content_points_6_d__}\r\n                                    </li>\r\n                                    <li>{Intro_content.Intro_content_points_6_e}</li>\r\n                                </ol>\r\n                            </li>\r\n                            <li>\r\n                                {Intro_content.Intro_content_points_7}\r\n                                <span> {Intro_content.span_4}</span>{\" \"}\r\n                                {Intro_content.Intro_content_points_7__}\r\n                            </li>\r\n                            <li>{Intro_content.Intro_content_points_8}</li>\r\n                            <h3>{Intro_content.Intro_content_text_subheading_4}</h3>\r\n                            <li>{Intro_content.Intro_content_points_9}</li>\r\n                            <li>{Intro_content.Intro_content_points_10}</li>\r\n                            <li>{Intro_content.Intro_content_points_11}</li>\r\n                            <li>{Intro_content.Intro_content_points_12}</li>\r\n                        </ol>\r\n                    </div>\r\n                );\r\n            })}\r\n            <div className=\"intro_next_btn_container\">\r\n                <Link to='/General_intructions_page' className=\"intro_next_btn\">NEXT <AiOutlineArrowRight /></Link>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Pages\\Home\\Home.jsx",[],[],"D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Pages\\General_intructions_page\\General_intructions_page.jsx",["97","98","99","100","101","102"],[],"import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n    General_intructions_page_content,\r\n    Navbar,\r\n} from \"../../Data/Introduction_page_DATA\"\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\r\nimport Paper from '../Paper/Paper';\r\n\r\nconst General_intructions_page = () => {\r\n    return (\r\n        <>\r\n            <General_intructions_page_header />\r\n            <General_intructions_page_container  seconds={600}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default General_intructions_page;\r\n\r\nexport const General_intructions_page_header = () => {\r\n    return (\r\n        <>\r\n            {Navbar.map((nav, index) => {\r\n                return (\r\n                    <div className=\"Quiz_General_header\" key={index}>\r\n                        <h1>{nav.Q_page_title}</h1>\r\n                        <div className=\"Q_title\">\r\n                            {/* <p>{nav.time_limt}</p> */}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport const General_intructions_page_container = () => {\r\n\r\n    \r\n\r\n    //  const [countdown, setCountdown] = useState(seconds);\r\n        // const timerId = useRef();\r\n\r\n        // useEffect(() => {\r\n        //     if (countdown <= 0) {\r\n        //         clearInterval(timerId.current);\r\n        //         alert(\"End\");\r\n        //     }\r\n        // }, [countdown]);\r\n        // const navigate = useNavigate();\r\n        // const startCountdown = () => {\r\n        //     timerId.current = setInterval(() => {\r\n        //         setCountdown((prev) => prev - 1);\r\n        //     }, 1000);\r\n        //     navigate('/Paper');\r\n        // };\r\n    return (\r\n        <>\r\n            {General_intructions_page_content.map((gipc, index) => {\r\n                return (\r\n                    <div key={index} className=\"Q_container g_container\">\r\n                        <h3>{gipc.gnheading}</h3>\r\n\r\n                        <div className=\"Gn_table\">\r\n                            <table>\r\n                                <tr>\r\n                                    <th>{gipc.gn_table_heading1}</th>\r\n                                    <th>{gipc.gn_table_heading2}</th>\r\n                                    <th>{gipc.gn_table_heading3}</th>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <th>{gipc.m}</th>\r\n                                    <td>{gipc.mq}</td>\r\n                                    <td>{gipc.mm}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>{gipc.p}</th>\r\n                                    <td>{gipc.pq}</td>\r\n                                    <td>{gipc.pm}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>{gipc.c}</th>\r\n                                    <td>{gipc.cq}</td>\r\n                                    <td>{gipc.cm}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{gipc.t}</td>\r\n                                    <th>{gipc.tq}</th>\r\n                                    <th>{gipc.tm}</th>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                        < ul className=\"gn_points\">\r\n                            <li>\r\n                                This test contains\r\n                                <strong>\r\n                                    90&nbsp;questions (need to answer 75 questions).\r\n                                </strong>\r\n                                &nbsp;\r\n                            </li>\r\n\r\n                            <li>\r\n                                Total duration of the test is <strong>180&nbsp;minutes.</strong>\r\n                            </li>\r\n\r\n                            <li>\r\n                                There are <strong>3 sections</strong> in the question paper\r\n                                consisting of{\" \"}\r\n                                <strong>Physics, Chemistry and Mathematics</strong> having{\" \"}\r\n                                <strong>30&nbsp;questions</strong> in each section (\r\n                                <strong>20 MCQs + 10 Numeric Value</strong> Answer Based\r\n                                Questions).\r\n                            </li>\r\n\r\n\r\n                            <li>\r\n                                <strong>Single Choice Type questions</strong>&nbsp;are\r\n                                allotted <strong>4 (Four)</strong> marks for each question\r\n                                answered correctly and <strong>1 (One) mark</strong> will be\r\n                                deducted for <strong>indicating incorrect </strong>response.\r\n                            </li>\r\n\r\n                            <li><strong>Numerical</strong> <strong>Value</strong> &nbsp;Type questions are allotted <strong>4 (Four)</strong> marks for each question answered correctly and<strong>&nbsp;1&nbsp;(one) marks</strong> will be deducted for <strong>indicating incorrect</strong> response.</li>\r\n\r\n                            <li>\r\n                                In each section in{\" \"}\r\n                                <strong>\r\n                                    Numerical Value Type Questions, 5 Questions out of 10 can be\r\n                                    attempted.\r\n                                </strong>\r\n                            </li>\r\n\r\n                            <li>In each section in <strong>Numerical Value Type Questions, 5 Questions out of 10 can be attempted.</strong></li>\r\n                            <li>\r\n                                In all the sections, <strong>No deduction</strong> from the\r\n                                total score will be made if <strong>no response</strong> is\r\n                                indicated.\r\n                            </li>\r\n\r\n\r\n                            <li>\r\n                                The countdown timer at the top right corner of screen will\r\n                                display the remaining time available for you to complete the\r\n                                examination. When the timer reaches zero, the examination will\r\n                                end by itself.\r\n                            </li>\r\n\r\n\r\n                            <li>Use a scribble pad for any rough work.</li>\r\n\r\n\r\n                            <li>You are not allowed to use a calculator.</li>\r\n\r\n                        </ul>\r\n                    </div>\r\n                );\r\n            })}\r\n\r\n            {/* <div className=\"gn_next_btn_container\">\r\n        <Link to='/' className=\"intro_next_btn\">NEXT <AiOutlineArrowRight/></Link>\r\n      </div> */}\r\n            <div className=\"gn_next_btn_container\">\r\n                <button>\r\n                <Link to='/Paper' element={<Paper/>}  className=\"gn_next_btn\">Iam ready to begin <AiOutlineArrowRight /></Link>\r\n                </button>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n};\r\n","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Data\\Introduction_page_DATA.js",[],[],"D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Components\\HomeHeader\\HomeHeader.jsx",[],[],"D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Components\\PaperHeader\\PaperHeader.jsx",[],[],"D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Components\\RightSidebar\\RightSidebar.jsx",["103","104","105","106","107"],[],"// import React, { useState } from 'react'\r\n\r\n// import './RightSidebar.css'\r\n\r\n\r\n\r\n\r\n// const buttons = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\r\n\r\n// // const renderList = buttons.map((item, index) =>\r\n// //     <div key={index}><button className='quesAns-btn'>{item}</button></div>\r\n// // )\r\n\r\n\r\n// const RightSidebar = ({ onQuestionSelect, questionStatus }) => {\r\n\r\n\r\n//     const [answeredQuestions, setAnsweredQuestions] = useState([]);\r\n\r\n//     const handleButtonClick = (questionNumber)=> {\r\n//         onQuestionSelect(questionNumber);\r\n//         setAnsweredQuestions([...answeredQuestions, questionNumber])\r\n//     }\r\n\r\n\r\n\r\n//     const renderList = buttons.map((item, index) => {\r\n//          let className = 'quesAns-btn';\r\n//          if(questionStatus && questionStatus[index] === 'answered'){\r\n//             className += 'answered';\r\n//          }\r\n//         return(\r\n//             <div>\r\n//                 <button className={className} onClick={() => handleButtonClick(item)}>{item}</button>\r\n//             </div>\r\n//         )\r\n\r\n//     })\r\n\r\n\r\n\r\n\r\n//     // const buttonClass = isAnswered ? 'quesAns-btn-green' : 'quesAns-btn';\r\n\r\n\r\n//     // const renderList = buttons.map((item) => {\r\n\r\n       \r\n//     //     return (\r\n//     //         <div>\r\n//     //             <button className='quesAns-btn' onClick={() => handleButtonClick(item)}>{item}</button>\r\n//     //         </div>\r\n//     //     )\r\n//     // })\r\n\r\n\r\n\r\n//     // const renderList = buttons.map((item) =>\r\n//     //     <div>\r\n//     //         <button className='quesAns-btn' onClick={() => handleButtonClick(item)}>{item}</button>\r\n//     //     </div>\r\n//     // )\r\n\r\n//     // const renderList = buttons.map((item) => {\r\n\r\n//     //     const isAnswered = answeredQuestions.includes(item);\r\n//     //     const buttonClass = isAnswered ? 'quesAns-btn-green' : 'quesAns-btn';\r\n//     //     return(\r\n//     //         <div>\r\n//     //             <button className={buttonClass} onClick={() => handleButtonClick(item)}>{item}</button>\r\n//     //         </div>\r\n//     //     )\r\n//     // })\r\n\r\n   \r\n\r\n//     return (\r\n\r\n//         <div className='right-side-bar'>\r\n//             <div className='rightSidebar-topHeader'><p>Name of the person</p>\r\n//             <p>Remaining Time: 1:10:30</p>\r\n//             </div>\r\n//             <div className='sidebar-header'>\r\n//                 <p className='header-para'>You are viewing <span className='subject'>Mathematics</span> Section Question Palette</p>\r\n//             </div>\r\n\r\n//             <div className='ques-btn'>\r\n//                 <ul className='btn-ul'>{renderList}</ul>\r\n//             </div>\r\n\r\n//             {/* <div key={index}>\r\n//                 <button className='quesAns-btn'>{item}</button>\r\n//             </div> */}\r\n\r\n//             <div className='sidebar-footer'>\r\n//                 <h4 className='sidebar-footer-header'>Legend</h4>\r\n//                 <div className='footer-btns'>\r\n//                     <div className='inst-btns'><button className='instruction-btn1'>0</button><p>Answerd</p><br /></div><br />\r\n//                     <div className='inst-btns'><button className='instruction-btn2'>0</button><p>Not Answered</p><br /></div><br />\r\n//                     <div className='inst-btns'><button className='instruction-btn3'>0</button><p>Marked</p><br /></div><br />\r\n//                     <div className='inst-btns'><button className='instruction-btn4'>0</button><p>Not Visited</p></div>\r\n//                 </div>\r\n//             </div>\r\n\r\n//         </div>\r\n//     )\r\n\r\n// }\r\n\r\n\r\n\r\n\r\n// export default RightSidebar\r\n\r\n\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\n// import popup from 'react-popup'\r\nimport './RightSidebar.css'\r\n// import Swal from 'sweetalert2'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst buttons = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\r\n\r\n// const renderList = buttons.map((item, index) =>\r\n//     <div key={index}><button className='quesAns-btn'>{item}</button></div>\r\n// )\r\n\r\n\r\nconst RightSidebar = ({ onQuestionSelect, questionStatus, seconds }) => {\r\n\r\n\r\n    const [answeredQuestions, setAnsweredQuestions] = useState([]);\r\n    const [isPaused, setIsPaused] = useState(false);\r\n\r\n    const handleButtonClick = (questionNumber) => {\r\n        onQuestionSelect(questionNumber);\r\n        setAnsweredQuestions([...answeredQuestions, questionNumber]);\r\n        setIsPaused(false);\r\n    }\r\n\r\n\r\n     \r\n    RightSidebar.propTypes = {\r\n        onQuestionSelect: PropTypes.func.isRequired,\r\n        questionStatus: PropTypes.arrayOf(PropTypes.string),\r\n        onResumeTimer: PropTypes.func.isRequired, // Define the prop type for onResumeTimer\r\n    };\r\n\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [timers, setTimers] = useState(new Array().fill(0));\r\n    const [timer, setTimer] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // Set the timer to the saved value for the current question\r\n        setTimer(timers[currentQuestionIndex] || 0);\r\n\r\n        let interval;\r\n        // interval = setInterval(() => {\r\n        //     setTimer(prevTimer => prevTimer + 1);\r\n        // }, 1000);\r\n\r\n        if (!isPaused) {\r\n            interval = setInterval(() => {\r\n                setTimer(prevTimer => prevTimer + 1);\r\n            }, 1000);\r\n        }\r\n\r\n        // Clear the interval when the component unmounts or when the user moves to the next question\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [currentQuestionIndex, timers, isPaused]);\r\n\r\n    const renderList = buttons.map((item, index) => {\r\n        let className = 'quesAns-btn';\r\n        if (questionStatus && questionStatus[index] === 'answered') {\r\n            className += 'answered';\r\n        }\r\n        return (\r\n            <div key={item}>\r\n                <button className={className} onClick={() => handleButtonClick(item)}>{item}</button>\r\n            </div>\r\n        )\r\n\r\n    })\r\n\r\n   \r\n\r\n\r\n\r\n\r\n    // const buttonClass = isAnswered ? 'quesAns-btn-green' : 'quesAns-btn';\r\n\r\n\r\n    // const renderList = buttons.map((item) => {\r\n\r\n\r\n    //     return (\r\n    //         <div>\r\n    //             <button className='quesAns-btn' onClick={() => handleButtonClick(item)}>{item}</button>\r\n    //         </div>\r\n    //     )\r\n    // })\r\n\r\n\r\n\r\n    // const renderList = buttons.map((item) =>\r\n    //     <div>\r\n    //         <button className='quesAns-btn' onClick={() => handleButtonClick(item)}>{item}</button>\r\n    //     </div>\r\n    // )\r\n\r\n    // const renderList = buttons.map((item) => {\r\n\r\n    //     const isAnswered = answeredQuestions.includes(item);\r\n    //     const buttonClass = isAnswered ? 'quesAns-btn-green' : 'quesAns-btn';\r\n    //     return(\r\n    //         <div>\r\n    //             <button className={buttonClass} onClick={() => handleButtonClick(item)}>{item}</button>\r\n    //         </div>\r\n    //     )\r\n    // })\r\n\r\n  \r\n\r\n    const totalTime = 180 * 60; // 180 minutes in seconds\r\n    const [wtimer, setWTimer] = useState(totalTime);\r\n  \r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        setWTimer((prevTimer) => prevTimer - 1);\r\n      }, 1000);\r\n  \r\n      // Clear the interval and handle time-up logic when timer reaches 0\r\n      if (wtimer <= 0) {\r\n        clearInterval(interval);\r\n        // Handle time-up logic here (e.g., navigate to a different component)\r\n      }\r\n  \r\n      // Clean up the interval on component unmount or when navigating away\r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }, [wtimer]);\r\n  \r\n    const WformatTime = (seconds) => {\r\n      const hours = Math.floor(seconds / 3600);\r\n      const minutes = Math.floor((seconds % 3600) / 60);\r\n      const remainingSeconds = seconds % 60;\r\n      return `${hours > 9 ? hours : '0' + hours}:${minutes > 9 ? minutes : '0' + minutes}:${remainingSeconds > 9 ? remainingSeconds : '0' + remainingSeconds}`;\r\n    };\r\n\r\n\r\n    // let mySpecialPopup = popup.register({\r\n    //     // title: 'Are you sure you want to submit the test ?',\r\n    //     content:'Are you sure you want to submit the test ?',\r\n    //     buttons: {\r\n    //         left: ['cancel'],\r\n    //         right: ['ok']\r\n    //     }\r\n    // });\r\n    // popup.queue(mySpecialPopup);\r\n    \r\n   \r\n\r\n      const [openalertsubmit,setOpenalertsubmit]=useState(false)\r\n      const handleSubmit=() => {\r\n        setOpenalertsubmit(true)\r\n       \r\n      }\r\n      const handleCancel=() => {\r\n        setOpenalertsubmit(false)\r\n       \r\n      }\r\n\r\n\r\n    return (\r\n\r\n        <div className='right-side-bar'>\r\n            <div className='rightSidebar-topHeader'><p>Name of the person</p>\r\n            <p>Time Left:  {WformatTime(wtimer)}</p>\r\n            </div>\r\n            <div className='sidebar-header'>\r\n                <p className='header-para'>You are viewing <span className='subject'>Mathematics</span> Section Question Palette</p>\r\n            </div>\r\n\r\n            <div className='ques-btn'>\r\n                <ul className='btn-ul'>{renderList}</ul>\r\n            </div>\r\n\r\n            {/* <div key={index}>\r\n                <button className='quesAns-btn'>{item}</button>\r\n            </div> */}\r\n\r\n            <div className='sidebar-footer'>\r\n                <h4 className='sidebar-footer-header'>Legend</h4>\r\n                <div className='footer-btns'>\r\n                    <div className='inst-btns'><button className='instruction-btn1'>0</button><p>Answerd</p><br /></div><br />\r\n                    <div className='inst-btns'><button className='instruction-btn2'>0</button><p>Not Answered</p><br /></div><br />\r\n                    <div className='inst-btns'><button className='instruction-btn3'>0</button><p>Marked</p><br /></div><br />\r\n                    <div className='inst-btns'><button className='instruction-btn4'>0</button><p>Answered but marked for review</p></div><br />\r\n                    <div className='inst-btns'><button className='instruction-btn5'>0</button><p>Not Visited</p></div>\r\n                </div>\r\n                <div>\r\n                   {/* <Link to='/ads'  onClick={handleSubmit}> jkkh</Link> */}\r\n                   <button onClick={handleSubmit}>\r\n                   Submit\r\n                    </button>\r\n                    {openalertsubmit ?\r\n                    <div>\r\n                        <h3>Are you sure?</h3>\r\n                        <p>You want to submit the test...</p>\r\n                        <button><Link to='/result'>Submit</Link></button>\r\n                        <button onClick={handleCancel}>Cancel</button>\r\n                    </div>:null\r\n}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default RightSidebar","D:\\Quiz App\\Main Quiz App\\egate_Quiz_project\\src\\Components\\LeftSidebar\\LeftSidebar.jsx",[],[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":26,"column":58,"nodeType":"112","messageId":"113","endLine":26,"endColumn":85},{"ruleId":"114","severity":1,"message":"115","line":68,"column":17,"nodeType":"116","messageId":"117","endLine":68,"endColumn":26},{"ruleId":"114","severity":1,"message":"118","line":68,"column":28,"nodeType":"116","messageId":"117","endLine":68,"endColumn":36},{"ruleId":"114","severity":1,"message":"119","line":74,"column":8,"nodeType":"116","messageId":"117","endLine":74,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":1220,"column":17,"nodeType":"116","messageId":"117","endLine":1220,"endColumn":26},{"ruleId":"114","severity":1,"message":"120","line":1226,"column":8,"nodeType":"116","messageId":"117","endLine":1226,"endColumn":13},{"ruleId":"114","severity":1,"message":"121","line":1229,"column":21,"nodeType":"116","messageId":"117","endLine":1229,"endColumn":33},{"ruleId":"114","severity":1,"message":"122","line":1230,"column":21,"nodeType":"116","messageId":"117","endLine":1230,"endColumn":33},{"ruleId":"114","severity":1,"message":"123","line":1236,"column":10,"nodeType":"116","messageId":"117","endLine":1236,"endColumn":20},{"ruleId":"114","severity":1,"message":"124","line":1237,"column":10,"nodeType":"116","messageId":"117","endLine":1237,"endColumn":16},{"ruleId":"114","severity":1,"message":"125","line":1333,"column":17,"nodeType":"116","messageId":"117","endLine":1333,"endColumn":25},{"ruleId":"114","severity":1,"message":"126","line":1436,"column":9,"nodeType":"116","messageId":"117","endLine":1436,"endColumn":25},{"ruleId":"110","severity":1,"message":"127","line":149,"column":13,"nodeType":"112","messageId":"113","endLine":149,"endColumn":32},{"ruleId":"114","severity":1,"message":"115","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"128","line":1,"column":28,"nodeType":"116","messageId":"117","endLine":1,"endColumn":34},{"ruleId":"114","severity":1,"message":"118","line":1,"column":36,"nodeType":"116","messageId":"117","endLine":1,"endColumn":44},{"ruleId":"114","severity":1,"message":"129","line":6,"column":16,"nodeType":"116","messageId":"117","endLine":6,"endColumn":27},{"ruleId":"110","severity":1,"message":"130","line":13,"column":13,"nodeType":"112","messageId":"113","endLine":13,"endColumn":48},{"ruleId":"110","severity":1,"message":"131","line":14,"column":13,"nodeType":"112","messageId":"113","endLine":14,"endColumn":65},{"ruleId":"114","severity":1,"message":"128","line":117,"column":28,"nodeType":"116","messageId":"117","endLine":117,"endColumn":34},{"ruleId":"114","severity":1,"message":"132","line":154,"column":34,"nodeType":"116","messageId":"117","endLine":154,"endColumn":57},{"ruleId":"114","severity":1,"message":"133","line":155,"column":20,"nodeType":"116","messageId":"117","endLine":155,"endColumn":29},{"ruleId":"134","severity":1,"message":"135","line":155,"column":42,"nodeType":"136","messageId":"137","endLine":155,"endColumn":53},{"ruleId":"114","severity":1,"message":"138","line":156,"column":12,"nodeType":"116","messageId":"117","endLine":156,"endColumn":17},"no-new-object",["139"],"react/jsx-pascal-case","Imported JSX component General_intructions_page must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'PhoneInput' is defined but never used.","'axios' is defined but never used.","'setOPTImages' is assigned a value but never used.","'setQuestions' is assigned a value but never used.","'showResult' is assigned a value but never used.","'result' is assigned a value but never used.","'setTimer' is assigned a value but never used.","'questionImageSrc' is assigned a value but never used.","Imported JSX component Intro_container must be in PascalCase or SCREAMING_SNAKE_CASE","'useRef' is defined but never used.","'useNavigate' is defined but never used.","Imported JSX component General_intructions_page_header must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component General_intructions_page_container must be in PascalCase or SCREAMING_SNAKE_CASE","'setCurrentQuestionIndex' is assigned a value but never used.","'setTimers' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'timer' is assigned a value but never used.","no-object-constructor"]